{"version":3,"file":"pfe-clipboard.umd.js","sources":["../_temp/pfe-clipboard.umd.js"],"sourcesContent":["/*!\n * PatternFly Elements: PfeClipboard 1.12.0\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport PFElement from \"../../pfelement/dist/pfelement\";\n\nclass PfeClipboard extends PFElement {\n\n  // Injected at build-time\n  static get version() {\n    return \"1.12.0\";\n  }\n\n  // Injected at build-time\n  get html() {\n    return `\n<style>:host{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:0;-webkit-flex:0 0 auto;-ms-flex:0 0 auto;flex:0 0 auto;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;max-width:-webkit-fit-content;max-width:-moz-fit-content;max-width:fit-content;color:#06c!important;color:var(--pfe-clipboard--Color,var(--pfe-broadcasted--link,#06c))!important;cursor:pointer;padding:6px 16px;padding:var(--pfe-clipboard--Padding,6px 16px);font-weight:300;font-weight:var(--pfe-clipboard--FontWeight,var(--pfe-theme--font-weight--light,300));font-size:1rem;font-size:var(--pfe-clipboard--FontSize,var(--pf-global--FontSize--md,1rem))}:host([hidden]){display:none}.pfe-clipboard__icon{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:1em;width:var(--pfe-clipboard--icon--Width,var(--pfe-theme--icon-size,1em));height:auto;height:var(--pfe-clipboard--icon--Height,auto);margin:0 .4825rem 0 0;margin:var(--pfe-clipboard--icon--Margin,0 .4825rem 0 0);--pfe-icon--Color:var(--pfe-clipboard--icon--Color, var(--pfe-theme--color--text--muted, #6a6e73))}.pfe-clipboard__icon svg{fill:#6a6e73!important;fill:var(--pfe-clipboard--icon--Color,var(--pfe-theme--color--text--muted,#6a6e73))!important}:host([disabled]) .pfe-clipboard__icon{opacity:.4}.pfe-clipboard__text{color:#06c!important;color:var(--pfe-clipboard--Color,var(--pfe-broadcasted--link,#06c))!important}:host([disabled]) .pfe-clipboard__text{color:#6a6e73!important;color:var(--pfe-clipboard--Color--disabled,var(--pfe-theme--color--ui-disabled--text,#6a6e73))!important}.pfe-clipboard__text--success{color:#3e8635!important;color:var(--pfe-clipboard--text--success--Color,var(--pfe-theme--color--feedback--success,#3e8635))!important}:host(:focus:not([disabled])) .pfe-clipboard__text,:host(:hover:not([disabled])) .pfe-clipboard__text{color:#004080!important;color:var(--pfe-clipboard--Color--hover,var(--pfe-broadcasted--link--hover,#004080))!important}:host(:focus:not([disabled])) .pfe-clipboard__icon,:host(:hover:not([disabled])) .pfe-clipboard__icon{--pfe-icon--Color:var(--pfe-clipboard--icon--Color--hover, var(--pfe-theme--color--ui-base--hover, #151515))}:host(:focus:not([disabled])) .pfe-clipboard__icon svg,:host(:hover:not([disabled])) .pfe-clipboard__icon svg{fill:#151515!important;fill:var(--pfe-clipboard--icon--Color--hover,var(--pfe-theme--color--ui-base--hover,#151515))!important}.pfe-clipboard[copied] .pfe-clipboard__text,:host([copied]) .pfe-clipboard__text{display:none!important}.pfe-clipboard:not([copied]) .pfe-clipboard__text--success,:host(:not([copied])) .pfe-clipboard__text--success{display:none!important}.pfe-clipboard__icon>*,::slotted([slot=icon]){width:100%}#icon--url{display:none}:host([copy-from=url]) #icon--url{display:block}:host([copy-from=url]) #icon--copy{display:none}:host([on=dark]){--pfe-clipboard--icon--Color:var(--pfe-clipboard--icon--Color--dark, var(--pfe-theme--color--text--muted--on-dark, #d2d2d2));--pfe-clipboard--icon--Color--hover:var(--pfe-clipboard--icon--Color--hover--dark, var(--pfe-theme--color--text--on-dark, #fff))}:host([on=saturated]){--pfe-clipboard--icon--Color:var(--pfe-clipboard--icon--Color--saturated, var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2));--pfe-clipboard--icon--Color--hover:var(--pfe-clipboard--icon--Color--hover--saturated, var(--pfe-theme--color--text--on-saturated, #fff))}@media screen and (-ms-high-contrast:active),screen and (-ms-high-contrast:none){:host{display:inline-block}.pfe-clipboard__icon{display:inline-block;margin-right:0}.pfe-clipboard__text{display:inline-block}.pfe-clipboard__text--success{display:inline-block}} /*# sourceMappingURL=pfe-clipboard.min.css.map */</style>\n<!-- icon slot -->\n${!this.noIcon ? `\n    <div class=\"pfe-clipboard__icon\">\n      <slot name=\"icon\" id=\"icon\">\n        <svg id=\"icon--url\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 15.277 16\"><g transform=\"translate(-2.077 -1.807)\"><path class=\"a\" d=\"M15.34,2.879a3.86,3.86,0,0,0-5.339,0L6.347,6.545a3.769,3.769,0,0,0,0,5.339.81.81,0,0,0,1.132,0,.823.823,0,0,0,0-1.145A2.144,2.144,0,0,1,7.5,7.677l3.641-3.654a2.161,2.161,0,1,1,3.049,3.062l-.8.8a.811.811,0,1,0,1.145,1.132l.8-.8a3.769,3.769,0,0,0,0-5.339Z\" transform=\"translate(0.906 0)\"/><path class=\"a\" d=\"M10.482,6.822a.823.823,0,0,0,0,1.145,2.161,2.161,0,0,1,0,3.049L7.343,14.155a2.161,2.161,0,0,1-3.062,0,2.187,2.187,0,0,1,0-3.062l.193-.116a.823.823,0,0,0,0-1.145.811.811,0,0,0-1.132,0l-.193.193a3.86,3.86,0,0,0,0,5.339,3.86,3.86,0,0,0,5.339,0l3.126-3.139A3.731,3.731,0,0,0,12.72,9.562a3.769,3.769,0,0,0-1.094-2.74A.823.823,0,0,0,10.482,6.822Z\" transform=\"translate(0 1.37)\"/></g></svg>\n        <svg id=\"icon--copy\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><g></g><path d=\"M30.286 6.857q0.714 0 1.214 0.5t0.5 1.214v21.714q0 0.714-0.5 1.214t-1.214 0.5h-17.143q-0.714 0-1.214-0.5t-0.5-1.214v-5.143h-9.714q-0.714 0-1.214-0.5t-0.5-1.214v-12q0-0.714 0.357-1.571t0.857-1.357l7.286-7.286q0.5-0.5 1.357-0.857t1.571-0.357h7.429q0.714 0 1.214 0.5t0.5 1.214v5.857q1.214-0.714 2.286-0.714h7.429zM20.571 10.661l-5.339 5.339h5.339v-5.339zM9.143 3.804l-5.339 5.339h5.339v-5.339zM12.643 15.357l5.643-5.643v-7.429h-6.857v7.429q0 0.714-0.5 1.214t-1.214 0.5h-7.429v11.429h9.143v-4.571q0-0.714 0.357-1.571t0.857-1.357zM29.714 29.714v-20.571h-6.857v7.429q0 0.714-0.5 1.214t-1.214 0.5h-7.429v11.429h16z\"/></svg>\n      </slot>\n    </div>\n` : \"\"}\n<div class=\"pfe-clipboard__text\">\n    <slot name=\"text\" id=\"text\">Copy</slot>\n</div>\n<div class=\"pfe-clipboard__text--success\" role=\"alert\">\n    <slot name=\"text--success\" id=\"text--success\">Copied</slot>\n</div>`;\n  }\n\n  static get tag() {\n    return \"pfe-clipboard\";\n  }\n\n  static get meta() {\n    return {\n      title: \"Clipboard\",\n      description: \"Copy current URL to clipboard.\",\n    };\n  }\n\n  get templateUrl() {\n    return \"pfe-clipboard.html\";\n  }\n\n  get styleUrl() {\n    return \"pfe-clipboard.scss\";\n  }\n\n  static get events() {\n    return {\n      copied: `${this.tag}:copied`,\n      connected: `${this.tag}:connected`,\n    };\n  }\n\n  // Declare the type of this component\n  static get PfeType() {\n    return PFElement.PfeTypes.Content;\n  }\n\n  static get properties() {\n    return {\n      noIcon: {\n        title: \"No icon\",\n        type: Boolean,\n        observer: \"_noIconChanged\",\n      },\n      copiedDuration: {\n        title: \"Success message duration (in seconds)\",\n        type: Number,\n        default: 3,\n      },\n      role: {\n        type: String,\n        default: \"button\",\n      },\n      tabindex: {\n        type: Number,\n        default: 0,\n      },\n      copyFrom: {\n        type: String,\n        default: \"url\",\n        observer: \"_checkForCopyTarget\",\n      },\n    };\n  }\n\n  static get slots() {\n    return {\n      icon: {\n        title: \"Icon\",\n        description: \"This field can accept an SVG, pfe-icon component, or other format for displaying an icon.\",\n        slotName: \"icon\",\n        slotClass: \"pfe-clipboard__icon\",\n        slotId: \"icon\",\n      },\n      text: {\n        title: \"Default text\",\n        slotName: \"text\",\n        slotClass: \"pfe-clipboard__text\",\n        slotId: \"text\",\n      },\n      textSuccess: {\n        title: \"Success message\",\n        description: \"Shown when the URL is successfully copied to the clipboard.\",\n        slotName: \"text--success\",\n        slotClass: \"pfe-clipboard__text--success\",\n        slotId: \"text--success\",\n      },\n    };\n  }\n\n  get contentToCopy() {\n    return this._contentToCopy;\n  }\n\n  /**\n   * Adding Getter/Setter for\n   */\n  set contentToCopy(contentToCopy) {\n    if (contentToCopy) {\n      this.removeAttribute(\"disabled\");\n      this._contentToCopy = contentToCopy;\n    }\n  }\n\n  constructor() {\n    super(PfeClipboard, { type: PfeClipboard.PfeType });\n    this._contentToCopy = null;\n\n    this._checkForCopyTarget = this._checkForCopyTarget.bind(this);\n    this.copyURLToClipboard = this.copyURLToClipboard.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    // Since this element as the role of button we are going to listen\n    // for click and as well as 'enter' and 'space' commands to trigger\n    // the copy functionality\n    this.addEventListener(\"click\", this._clickHandler.bind(this));\n    this.addEventListener(\"keydown\", this._keydownHandler.bind(this));\n\n    // Make sure the thing we might copy exists\n    this._checkForCopyTarget();\n\n    // Emit event when this component has connected in case copyContent needs to be set\n    this.emitEvent(PfeClipboard.events.connected, {\n      detail: {\n        component: this,\n      },\n    });\n\n    // This prevents a regression, default text used to be \"Copy URL\".\n    // Now that component can copy _anything_ that's not ideal default text\n    if (this.copyFrom === \"url\" && !this.hasSlot(\"text\")) {\n      this.shadowRoot.getElementById(\"text\").innerText = \"Copy URL\";\n    }\n  }\n\n  disconnectedCallback() {\n    // Clean up after ourselves\n    this.removeEventListener(\"click\", this._clickHandler.bind(this));\n    this.removeEventListener(\"keydown\", this._keydownHandler.bind(this));\n    super.disconnectedCallback();\n  }\n\n  _noIconChanged(previousValue) {\n    // dirty check to see if we should rerender the template\n    if (this._rendered && this.noIcon !== previousValue) {\n      this.render();\n    }\n  }\n\n  /**\n   * Checks to make sure the thing we may copy exists\n   */\n  _checkForCopyTarget() {\n    if (this.copyFrom === \"property\") {\n      if (!this._contentToCopy) {\n        this.setAttribute(\"disabled\", \"\");\n      } else if (this.hasAttribute(\"disabled\")) {\n        this.removeAttribute(\"disabled\");\n      }\n    }\n    // If target is set to anything else, we're not doing checks for it\n    else if (this.copyFrom.length) {\n      this.removeAttribute(\"disabled\");\n    }\n  }\n\n  /**\n   * Event handler for any activation of the copy button\n   */\n  _clickHandler() {\n    let text;\n    switch (this.copyFrom) {\n      // Copy current URL\n      case \"url\":\n        text = window.location.href;\n        break;\n      // Copy whatever is in this.contentToCopy\n      case \"property\":\n        if (this._contentToCopy) {\n          text = this._contentToCopy;\n        } else {\n          this.setAttribute(\"disabled\", \"\");\n          this.error(\"Set to copy property, but this.contentToCopy is not set\");\n          return;\n        }\n        break;\n      // Assume what's in the target property is a selector and copy the text from the element\n      default:\n        const targetElement = document.querySelector(this.copyFrom);\n        if (targetElement && targetElement.tagName) {\n          // What needs to be copied changes for some types of elements\n          switch (targetElement.tagName.toLowerCase()) {\n            // Copy the value of form fields\n            case \"input\":\n              text = targetElement.value;\n              break;\n            // Copy the text of our element\n            default:\n              text = targetElement.innerText;\n              break;\n          }\n        }\n        break;\n    }\n\n    if (!text || (typeof text === \"string\" && !text.length)) {\n      this.error(\"Couldn't find text to copy.\");\n      this.setAttribute(\"disabled\", \"\");\n      return;\n    }\n\n    // Execute the copy to clipboard functionality\n    this.copyTextToClipboard(text)\n      .then((copiedText) => {\n        // Emit event that lets others know the user has \"copied\"\n        // the url. We are also going to include the url that was\n        // copied.\n        this.emitEvent(PfeClipboard.events.copied, {\n          detail: {\n            url: copiedText, // @todo deprecate\n            copiedText: copiedText,\n          },\n        });\n        // Toggle the copied state. Use the this._formattedCopiedTimeout function\n        // to an appropraite setTimout length.\n        this.setAttribute(\"copied\", \"\");\n        setTimeout(() => {\n          this.removeAttribute(\"copied\");\n        }, this._formattedCopiedTimeout());\n      })\n      .catch((error) => {\n        this.warn(error);\n        this._checkForCopyTarget();\n      });\n  }\n\n  // Formatted copied timeout value. Use the formattedCopiedTimeout function\n  // to get a type safe, millisecond value of the timeout duration.\n  _formattedCopiedTimeout() {\n    const copiedDuration = Number(this.copiedDuration * 1000);\n    if (!(copiedDuration > -1)) {\n      this.warn(`copied-duration must be a valid number. Defaulting to 3 seconds.`);\n      // default to 3 seconds\n      return 3000;\n    } else {\n      return copiedDuration;\n    }\n  }\n\n  // Listen for keyboard events and map them to their\n  // corresponding mouse events.\n  _keydownHandler(event) {\n    let key = event.key || event.keyCode;\n    switch (key) {\n      case \"Enter\" || 13:\n        this._clickHandler(event);\n        break;\n      case \" \" || 32:\n        // Prevent the browser from scolling when the user hits the space key\n        event.stopPropagation();\n        event.preventDefault();\n        this._clickHandler(event);\n        break;\n    }\n  }\n\n  /**\n   * Copy arbitrary text to system clipboard\n   *\n   * If available, it will use the new Navigator API to access the system clipboard\n   * https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard\n   *\n   * If unavailable, it will use the legacy execCommand(\"copy\")\n   * https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\n   * @async\n   * @param {string} text Text to be copied\n   * @return {Promise<string>} url\n   */\n  copyTextToClipboard(text) {\n    if (!text) this.error(\"Copy function called, but no text was given to copy.\");\n    return new Promise((resolve, reject) => {\n      // If the Clipboard API is available then use that\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(text).then(resolve(text));\n      }\n      // If execCommand(\"copy\") exists then use that method\n      else if (document.queryCommandEnabled(\"copy\")) {\n        const dummy = document.createElement(\"input\");\n        document.body.appendChild(dummy);\n        dummy.value = text;\n        dummy.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(dummy);\n        resolve(text);\n      } else {\n        reject(new Error(\"Current browser does not support copying to the clipboard.\"));\n      }\n    });\n  }\n\n  /**\n   * Copy url to the user's system clipboard\n   *\n   * @async\n   * @deprecated This will be removed in version 2.0\n   * @return {Promise<string>} url\n   */\n  copyURLToClipboard() {\n    const url = window.location.href;\n    return this.copyTextToClipboard(url);\n  }\n}\n\nPFElement.create(PfeClipboard);\n\nexport default PfeClipboard;\n"],"names":["PfeClipboard","noIcon","_contentToCopy","contentToCopy","removeAttribute","title","description","copied","tag","connected","PFElement","PfeTypes","Content","type","Boolean","observer","copiedDuration","Number","default","role","String","tabindex","copyFrom","icon","slotName","slotClass","slotId","text","textSuccess","PfeType","_checkForCopyTarget","bind","copyURLToClipboard","addEventListener","_clickHandler","_keydownHandler","emitEvent","events","detail","component","hasSlot","shadowRoot","getElementById","innerText","removeEventListener","previousValue","_rendered","render","setAttribute","hasAttribute","length","window","location","href","error","targetElement","document","querySelector","tagName","toLowerCase","value","copyTextToClipboard","then","copiedText","url","setTimeout","_formattedCopiedTimeout","catch","warn","event","key","keyCode","stopPropagation","preventDefault","Promise","resolve","reject","navigator","clipboard","writeText","queryCommandEnabled","dummy","createElement","body","appendChild","select","execCommand","removeChild","Error","create"],"mappings":"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"}