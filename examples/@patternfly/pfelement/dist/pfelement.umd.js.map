{"version":3,"file":"pfelement.umd.js","sources":["../_temp/reveal.js","../_temp/attrDefValidators.js","../_temp/polyfills--pfelement.js","../_temp/pfelement.umd.js"],"sourcesContent":["let logger = () => null;\n\n/**\n * Reveal web components when loading is complete by removing the unresolved attribute\n * from the body tag; log the event.\n * @throws debugging log indicating the reveal event\n */\nexport function reveal() {\n  logger(`[reveal] elements ready, revealing the body`);\n  window.document.body.removeAttribute(\"unresolved\");\n}\n\n/**\n * Auto-reveal functionality prevents a flash of unstyled content before components\n * have finished loading.\n * @param {function} logFunction\n * @see https://github.com/github/webcomponentsjs#webcomponents-loaderjs\n */\nexport function autoReveal(logFunction) {\n  logger = logFunction;\n  // If Web Components are already ready, run the handler right away.  If they\n  // are not yet ready, wait.\n  //\n  // see https://github.com/github/webcomponentsjs#webcomponents-loaderjs for\n  // info about web component readiness events\n  const polyfillPresent = window.WebComponents;\n  const polyfillReady = polyfillPresent && window.WebComponents.ready;\n\n  if (!polyfillPresent || polyfillReady) {\n    handleWebComponentsReady();\n  } else {\n    window.addEventListener(\"WebComponentsReady\", handleWebComponentsReady);\n  }\n}\n\n/**\n * Reveal web components when loading is complete and log event.\n * @throws debugging log indicating the web components are ready\n */\nfunction handleWebComponentsReady() {\n  logger(\"[reveal] web components ready\");\n  reveal();\n}\n","/**\n * Verify that a property definition's `type` field contains one of the allowed\n * types.  If the definition type resolves to falsy, assumes String type.\n * @param {constructor} definition\n * @default String\n * @return {Boolean} True if the definition type is one of String, Number, or Boolean\n */\nexport function isAllowedType(definition) {\n  return [String, Number, Boolean].includes(definition.type || String);\n}\n\n/**\n * Verify that a property definition's `default` value is of the correct type.\n *\n * A `default` value is valid if it's of the same type as the `type`\n * definition.  Or, if there is no `type` definition, then it must be a String\n * (the default value for `type`).\n * @param {type} definition\n * @return {Boolean} True if the default value matches the type of the definition object.\n */\nexport function isValidDefaultType(definition) {\n  return definition.hasOwnProperty(\"default\") && definition.default.constructor === definition.type;\n}\n","// @POLYFILL  Array.includes\n/** @see https://tc39.github.io/ecma262/#sec-array.prototype.includes */\nif (!Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, \"includes\", {\n    value: function (valueToFind, fromIndex) {\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      // 1. Let O be ? ToObject(this value).\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If len is 0, return false.\n      if (len === 0) {\n        return false;\n      }\n\n      // 4. Let n be ? ToInteger(fromIndex).\n      //    (If fromIndex is undefined, this step produces the value 0.)\n      var n = fromIndex | 0;\n\n      // 5. If n ≥ 0, then\n      //  a. Let k be n.\n      // 6. Else n < 0,\n      //  a. Let k be len + n.\n      //  b. If k < 0, let k be 0.\n      var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n      function sameValueZero(x, y) {\n        return x === y || (typeof x === \"number\" && typeof y === \"number\" && isNaN(x) && isNaN(y));\n      }\n\n      // 7. Repeat, while k < len\n      while (k < len) {\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\n        // b. If SameValueZero(valueToFind, elementK) is true, return true.\n        if (sameValueZero(o[k], valueToFind)) {\n          return true;\n        }\n        // c. Increase k by 1.\n        k++;\n      }\n\n      // 8. Return false\n      return false;\n    },\n  });\n}\n\n// @POLYFILL Object.entries\n/** @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries */\nif (!Object.entries) {\n  Object.entries = function (obj) {\n    var ownProps = Object.keys(obj),\n      i = ownProps.length,\n      resArray = new Array(i); // preallocate the Array\n    while (i--) resArray[i] = [ownProps[i], obj[ownProps[i]]];\n\n    return resArray;\n  };\n}\n\n// @POLYFILL String.startsWith\n/** @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#polyfill */\nif (!String.prototype.startsWith) {\n  Object.defineProperty(String.prototype, \"startsWith\", {\n    value: function (search, rawPos) {\n      var pos = rawPos > 0 ? rawPos | 0 : 0;\n      return this.substring(pos, pos + search.length) === search;\n    },\n  });\n}\n\n// @POLYFILL  Element.closest\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n    return null;\n  };\n}\n\n// @POLYFILL  Element.matches\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\n// @POLYFILL  Array.prototype.find\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, \"find\", {\n    value: function (predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== \"function\") {\n        throw new TypeError(\"predicate must be a function\");\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    },\n    configurable: true,\n    writable: true,\n  });\n}\n","/*!\n * PatternFly Elements: PFElement 1.12.2\n * @license\n * Copyright 2021 Red Hat, Inc.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * \n*/\n\nimport { autoReveal } from \"./reveal.js\";\nimport { isAllowedType, isValidDefaultType } from \"./attrDefValidators.js\";\n\n// Import polyfills: Array.includes, Object.entries, String.startsWith, Element.closest, Element.matches, Array.prototype.find\nimport \"./polyfills--pfelement.js\";\n\n// /**\n//  * Global prefix used for all components in the project.\n//  * @constant {String}\n//  * */\nconst prefix = \"pfe\";\n\n/**\n * @class PFElement\n * @extends HTMLElement\n * @version 1.12.2\n * @classdesc Serves as the baseline for all PatternFly Element components.\n */\nclass PFElement extends HTMLElement {\n  /**\n   * A boolean value that indicates if the logging should be printed to the console; used for debugging.\n   * For use in a JS file or script tag; can also be added in the constructor of a component during development.\n   * @example PFElement.debugLog(true);\n   * @tags debug\n   */\n  static debugLog(preference = null) {\n    if (preference !== null) {\n      // wrap localStorage references in a try/catch; merely referencing it can\n      // throw errors in some locked down environments\n      try {\n        localStorage.pfeLog = !!preference;\n      } catch (e) {\n        // if localStorage fails, fall back to PFElement._debugLog\n        PFElement._debugLog = !!preference;\n        return PFElement._debugLog;\n      }\n    }\n    // @TODO the reference to _debugLog is for backwards compatibiilty and will be removed in 2.0\n    return localStorage.pfeLog === \"true\" || PFElement._debugLog;\n  }\n\n  /**\n   * A boolean value that indicates if the performance should be tracked.\n   * For use in a JS file or script tag; can also be added in the constructor of a component during development.\n   * @example PFElement._trackPerformance = true;\n   */\n  static trackPerformance(preference = null) {\n    if (preference !== null) {\n      PFElement._trackPerformance = !!preference;\n    }\n    return PFElement._trackPerformance;\n  }\n\n  /**\n   * A object that contains configuration set outside of pfe.\n   *\n   * @example const config = PFElement.config;\n   */\n  static get config() {\n    // @TODO: Add config validation in the future.\n    return window.PfeConfig || {};\n  }\n\n  /**\n   * A logging wrapper which checks the debugLog boolean and prints to the console if true.\n   *\n   * @example PFElement.log(\"Hello\");\n   */\n  static log(...msgs) {\n    if (PFElement.debugLog()) {\n      console.log(...msgs);\n    }\n  }\n\n  /**\n   * Local logging that outputs the tag name as a prefix automatically\n   *\n   * @example this.log(\"Hello\");\n   */\n  log(...msgs) {\n    PFElement.log(`[${this.tag}${this.id ? `#${this.id}` : \"\"}]`, ...msgs);\n  }\n\n  /**\n   * A console warning wrapper which formats your output with useful debugging information.\n   *\n   * @example PFElement.warn(\"Hello\");\n   */\n  static warn(...msgs) {\n    console.warn(...msgs);\n  }\n\n  /**\n   * Local warning wrapper that outputs the tag name as a prefix automatically.\n   * For use inside a component's function.\n   * @example this.warn(\"Hello\");\n   */\n  warn(...msgs) {\n    PFElement.warn(`[${this.tag}${this.id ? `#${this.id}` : ``}]`, ...msgs);\n  }\n\n  /**\n   * A console error wrapper which formats your output with useful debugging information.\n   * For use inside a component's function.\n   * @example PFElement.error(\"Hello\");\n   */\n  static error(...msgs) {\n    throw new Error([...msgs].join(\" \"));\n  }\n\n  /**\n   * Local error wrapper that outputs the tag name as a prefix automatically.\n   * For use inside a component's function.\n   * @example this.error(\"Hello\");\n   */\n  error(...msgs) {\n    PFElement.error(`[${this.tag}${this.id ? `#${this.id}` : ``}]`, ...msgs);\n  }\n\n  /**\n   * A global definition of component types (a general way of defining the purpose of a\n   * component and how it is put together).\n   */\n  static get PfeTypes() {\n    return {\n      Container: \"container\",\n      Content: \"content\",\n      Combo: \"combo\",\n    };\n  }\n\n  /**\n   * The current version of a component; set by the compiler using the package.json data.\n   */\n  static get version() {\n    return \"1.12.2\";\n  }\n\n  /**\n   * A local alias to the static version.\n   * For use in the console to validate version being loaded.\n   * @example PfeAccordion.version\n   */\n  get version() {\n    return this._pfeClass.version;\n  }\n\n  /**\n   * Global property definitions: properties managed by the base class that apply to all components.\n   */\n  static get properties() {\n    return {\n      pfelement: {\n        title: \"Upgraded flag\",\n        type: Boolean,\n        default: true,\n        observer: \"_upgradeObserver\",\n      },\n      on: {\n        title: \"Context\",\n        description: \"Describes the visual context (backgrounds).\",\n        type: String,\n        values: [\"light\", \"dark\", \"saturated\"],\n        default: (el) => el.contextVariable,\n        observer: \"_onObserver\",\n      },\n      context: {\n        title: \"Context hook\",\n        description: \"Lets you override the system-set context.\",\n        type: String,\n        values: [\"light\", \"dark\", \"saturated\"],\n        observer: \"_contextObserver\",\n      },\n      // @TODO: Deprecated with 1.0\n      oldTheme: {\n        type: String,\n        values: [\"light\", \"dark\", \"saturated\"],\n        alias: \"context\",\n        attr: \"pfe-theme\",\n      },\n      _style: {\n        title: \"Custom styles\",\n        type: String,\n        attr: \"style\",\n        observer: \"_inlineStyleObserver\",\n      },\n      type: {\n        title: \"Component type\",\n        type: String,\n        values: [\"container\", \"content\", \"combo\"],\n      },\n    };\n  }\n\n  static get observedAttributes() {\n    const properties = this.allProperties;\n    if (properties) {\n      const oa = Object.keys(properties)\n        .filter((prop) => properties[prop].observer || properties[prop].cascade || properties[prop].alias)\n        .map((p) => this._convertPropNameToAttrName(p));\n      return [...oa];\n    }\n  }\n\n  /**\n   * A quick way to fetch a random ID value.\n   * _Note:_ All values are prefixes with `pfe` automatically to ensure an ID-safe value is returned.\n   *\n   * @example this.id = this.randomID;\n   */\n  get randomId() {\n    return `${prefix}-` + Math.random().toString(36).substr(2, 9);\n  }\n\n  /**\n   * Set the --context variable with the provided value in this component.\n   */\n  set contextVariable(value) {\n    this.cssVariable(\"context\", value);\n  }\n\n  /**\n   * Get the current value of the --context variable in this component.\n   * @return {string} [dark|light|saturated]\n   */\n  get contextVariable() {\n    /* @DEPRECATED --theme in 1.0, to be removed in 2.0 */\n    return this.cssVariable(\"context\") || this.cssVariable(\"theme\");\n  }\n\n  /**\n   * Returns a boolean statement of whether or not this component contains any light DOM.\n   * @returns {boolean}\n   * @example if(this.hasLightDOM()) this._init();\n   */\n  hasLightDOM() {\n    return this.children.length || this.textContent.trim().length;\n  }\n\n  /**\n   * Returns a boolean statement of whether or not that slot exists in the light DOM.\n   *\n   * @param {String|Array} name The slot name.\n   * @example this.hasSlot(\"header\");\n   */\n  hasSlot(name) {\n    if (!name) {\n      this.warn(`Please provide at least one slot name for which to search.`);\n      return;\n    }\n\n    if (typeof name === \"string\") {\n      return (\n        [...this.children].filter((child) => child.hasAttribute(\"slot\") && child.getAttribute(\"slot\") === name).length >\n        0\n      );\n    } else if (Array.isArray(name)) {\n      return name.reduce(\n        (n) =>\n          [...this.children].filter((child) => child.hasAttribute(\"slot\") && child.getAttribute(\"slot\") === n).length >\n          0\n      );\n    } else {\n      this.warn(`Expected hasSlot argument to be a string or an array, but it was given: ${typeof name}.`);\n      return;\n    }\n  }\n\n  /**\n   * Given a slot name, returns elements assigned to the slot as an arry.\n   * If no value is provided (i.e., `this.getSlot()`), it returns all children not assigned to a slot (without a slot attribute).\n   *\n   * @example: `this.getSlot(\"header\")`\n   */\n  getSlot(name = \"unassigned\") {\n    if (name !== \"unassigned\") {\n      return [...this.children].filter((child) => child.hasAttribute(\"slot\") && child.getAttribute(\"slot\") === name);\n    } else {\n      return [...this.children].filter((child) => !child.hasAttribute(\"slot\"));\n    }\n  }\n\n  cssVariable(name, value, element = this) {\n    name = name.substr(0, 2) !== \"--\" ? \"--\" + name : name;\n    if (value) {\n      element.style.setProperty(name, value);\n      return value;\n    }\n    return window.getComputedStyle(element).getPropertyValue(name).trim() || null;\n  }\n\n  /**\n   * This alerts nested components to a change in the context\n   */\n  contextUpdate() {\n    // Loop over light DOM elements, find direct descendants that are components\n    const lightEls = [...this.querySelectorAll(\"*\")]\n      .filter((item) => item.tagName.toLowerCase().slice(0, 4) === `${prefix}-`)\n      // Closest will return itself or it's ancestor matching that selector\n      .filter((item) => {\n        // If there is no parent element, return null\n        if (!item.parentElement) return;\n        // Otherwise, find the closest component that's this one\n        else return item.parentElement.closest(`[${this._pfeClass._getCache(\"prop2attr\").pfelement}]`) === this;\n      });\n\n    // Loop over shadow elements, find direct descendants that are components\n    let shadowEls = [...this.shadowRoot.querySelectorAll(\"*\")]\n      .filter((item) => item.tagName.toLowerCase().slice(0, 4) === `${prefix}-`)\n      // Closest will return itself or it's ancestor matching that selector\n      .filter((item) => {\n        // If there is a parent element and we can find another web component in the ancestor tree\n        if (item.parentElement && item.parentElement.closest(`[${this._pfeClass._getCache(\"prop2attr\").pfelement}]`)) {\n          return item.parentElement.closest(`[${this._pfeClass._getCache(\"prop2attr\").pfelement}]`) === this;\n        }\n        // Otherwise, check if the host matches this context\n        if (item.getRootNode().host === this) return true;\n\n        // If neither state is true, return false\n        return false;\n      });\n\n    const nestedEls = lightEls.concat(shadowEls);\n\n    // If nested elements don't exist, return without processing\n    if (nestedEls.length === 0) return;\n\n    // Loop over the nested elements and reset their context\n    nestedEls.map((child) => {\n      if (child.resetContext) {\n        this.log(`Update context of ${child.tagName.toLowerCase()}`);\n\n        // Ask the component to recheck it's context in case it changed\n        child.resetContext(this.on);\n      }\n    });\n  }\n\n  resetContext(fallback) {\n    if (this.isIE11) return;\n\n    // Priority order for context values to be pulled from:\n    //--> 1. context (OLD: pfe-theme)\n    //--> 2. --context (OLD: --theme)\n    let value = this.context || this.contextVariable || fallback;\n\n    // Validate that the current context (this.on) and the new context (value) are the same OR\n    // no context is set and there isn't a new context being set\n    if (this.on === value || (!this.on && !value)) return;\n\n    this.log(`Resetting context from ${this.on} to ${value || \"null\"}`);\n    this.on = value;\n  }\n\n  constructor(pfeClass, { type = null, delayRender = false } = {}) {\n    super();\n\n    this._pfeClass = pfeClass;\n    this.tag = pfeClass.tag;\n    this._parseObserver = this._parseObserver.bind(this);\n    this.isIE11 = /MSIE|Trident|Edge\\//.test(window.navigator.userAgent);\n\n    // Initialize the array of jump links pointers\n    // Expects items in the array to be NodeItems\n    if (!this._pfeClass.instances || !(this._pfeClass.instances.length >= 0)) this._pfeClass.instances = [];\n\n    // Set up the mark ID based on existing ID on component if it exists\n    if (!this.id) {\n      this._markId = this.randomId.replace(\"pfe\", this.tag);\n    } else if (this.id.startsWith(\"pfe-\") && !this.id.startsWith(this.tag)) {\n      this._markId = this.id.replace(\"pfe\", this.tag);\n    } else {\n      this._markId = `${this.tag}-${this.id}`;\n    }\n\n    this._markCount = 0;\n\n    // TODO: Deprecated for 1.0 release\n    this.schemaProps = pfeClass.schemaProperties;\n\n    // TODO: Migrate this out of schema for 1.0\n    this.slots = pfeClass.slots;\n\n    this.template = document.createElement(\"template\");\n\n    // Set the default value to the passed in type\n    if (type && this._pfeClass.allProperties.type) this._pfeClass.allProperties.type.default = type;\n\n    // Initalize the properties and attributes from the property getter\n    this._initializeProperties();\n\n    this.attachShadow({ mode: \"open\" });\n\n    // Tracks if the component has been initially rendered. Useful if for debouncing\n    // template updates.\n    this._rendered = false;\n\n    if (!delayRender) this.render();\n  }\n\n  /**\n   * Standard connected callback; fires when the component is added to the DOM.\n   */\n  connectedCallback() {\n    this._initializeAttributeDefaults();\n\n    if (window.ShadyCSS) window.ShadyCSS.styleElement(this);\n\n    // Register this instance with the pointer for the scoped class and the global context\n    this._pfeClass.instances.push(this);\n    PFElement.allInstances.push(this);\n\n    // If the slot definition exists, set up an observer\n    if (typeof this.slots === \"object\") {\n      this._slotsObserver = new MutationObserver(() => this._initializeSlots(this.tag, this.slots));\n      this._initializeSlots(this.tag, this.slots);\n    }\n  }\n\n  /**\n   * Standard disconnected callback; fires when a componet is removed from the DOM.\n   * Add your removeEventListeners here.\n   */\n  disconnectedCallback() {\n    if (this._cascadeObserver) this._cascadeObserver.disconnect();\n    if (this._slotsObserver) this._slotsObserver.disconnect();\n\n    // Remove this instance from the pointer\n    const classIdx = this._pfeClass.instances.find((item) => item !== this);\n    delete this._pfeClass.instances[classIdx];\n\n    const globalIdx = PFElement.allInstances.find((item) => item !== this);\n    delete PFElement.allInstances[globalIdx];\n  }\n\n  /**\n   * Attribute changed callback fires when attributes are updated.\n   * This combines the global and the component-specific logic.\n   */\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (!this._pfeClass.allProperties) return;\n\n    let propName = this._pfeClass._attr2prop(attr);\n\n    const propDef = this._pfeClass.allProperties[propName];\n\n    // If the attribute that changed derives from a property definition\n    if (propDef) {\n      // If the property/attribute pair has an alias, copy the new value to the alias target\n      if (propDef.alias) {\n        const aliasedPropDef = this._pfeClass.allProperties[propDef.alias];\n        const aliasedAttr = this._pfeClass._prop2attr(propDef.alias);\n        const aliasedAttrVal = this.getAttribute(aliasedAttr);\n        if (aliasedAttrVal !== newVal) {\n          this[propDef.alias] = this._castPropertyValue(aliasedPropDef, newVal);\n        }\n      }\n\n      // If the property/attribute pair has an observer, fire it\n      // Observers receive the oldValue and the newValue from the attribute changed callback\n      if (propDef.observer) {\n        this[propDef.observer](this._castPropertyValue(propDef, oldVal), this._castPropertyValue(propDef, newVal));\n      }\n\n      // If the property/attribute pair has a cascade target, copy the attribute to the matching elements\n      // Note: this handles the cascading of new/updated attributes\n      if (propDef.cascade) {\n        this._cascadeAttribute(attr, this._pfeClass._convertSelectorsToArray(propDef.cascade));\n      }\n    }\n  }\n\n  /**\n   * Standard render function.\n   */\n  render() {\n    this.shadowRoot.innerHTML = \"\";\n    this.template.innerHTML = this.html;\n\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(this.template, this.tag);\n    }\n\n    this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n\n    this.log(`render`);\n\n    // Cascade properties to the rendered template\n    this.cascadeProperties();\n\n    // Update the display context\n    this.contextUpdate();\n\n    if (PFElement.trackPerformance()) {\n      try {\n        performance.mark(`${this._markId}-rendered`);\n\n        if (this._markCount < 1) {\n          this._markCount = this._markCount + 1;\n\n          // Navigation start, i.e., the browser first sees that the user has navigated to the page\n          performance.measure(`${this._markId}-from-navigation-to-first-render`, undefined, `${this._markId}-rendered`);\n\n          // Render is run before connection unless delayRender is used\n          performance.measure(\n            `${this._markId}-from-defined-to-first-render`,\n            `${this._markId}-defined`,\n            `${this._markId}-rendered`\n          );\n        }\n      } catch (err) {\n        this.log(`Performance marks are not supported by this browser.`);\n      }\n    }\n\n    // If the slot definition exists, set up an observer\n    if (typeof this.slots === \"object\" && this._slotsObserver) {\n      this._slotsObserver.observe(this, { childList: true });\n    }\n\n    // If an observer was defined, set it to begin observing here\n    if (this._cascadeObserver) {\n      this._cascadeObserver.observe(this, {\n        attributes: true,\n        childList: true,\n        subtree: true,\n      });\n    }\n\n    this._rendered = true;\n  }\n\n  /**\n   * A wrapper around an event dispatch to standardize formatting.\n   */\n  emitEvent(name, { bubbles = true, cancelable = false, composed = true, detail = {} } = {}) {\n    if (detail) this.log(`Custom event: ${name}`, detail);\n    else this.log(`Custom event: ${name}`);\n\n    this.dispatchEvent(\n      new CustomEvent(name, {\n        bubbles,\n        cancelable,\n        composed,\n        detail,\n      })\n    );\n  }\n\n  /**\n   * Handles the cascading of properties to nested components when new elements are added\n   * Attribute updates/additions are handled by the attribute callback\n   */\n  cascadeProperties(nodeList) {\n    const cascade = this._pfeClass._getCache(\"cascadingProperties\");\n\n    if (cascade) {\n      if (this._cascadeObserver) this._cascadeObserver.disconnect();\n\n      let selectors = Object.keys(cascade);\n      // Find out if anything in the nodeList matches any of the observed selectors for cacading properties\n      if (selectors) {\n        if (nodeList) {\n          [...nodeList].forEach((nodeItem) => {\n            selectors.forEach((selector) => {\n              // if this node has a match function (i.e., it's an HTMLElement, not\n              // a text node), see if it matches the selector, otherwise drop it (like it's hot).\n              if (nodeItem.matches && nodeItem.matches(selector)) {\n                let attrNames = cascade[selector];\n                // each selector can match multiple properties/attributes, so\n                // copy each of them\n                attrNames.forEach((attrName) => this._copyAttribute(attrName, nodeItem));\n              }\n            });\n          });\n        } else {\n          // If a match was found, cascade each attribute to the element\n          const components = selectors\n            .filter((item) => item.slice(0, prefix.length + 1) === `${prefix}-`)\n            .map((name) => customElements.whenDefined(name));\n\n          if (components)\n            Promise.all(components).then(() => {\n              this._cascadeAttributes(selectors, cascade);\n            });\n          else this._cascadeAttributes(selectors, cascade);\n        }\n      }\n\n      if (this._rendered && this._cascadeObserver)\n        this._cascadeObserver.observe(this, {\n          attributes: true,\n          childList: true,\n          subtree: true,\n        });\n    }\n  }\n\n  /* --- Observers for global properties --- */\n\n  /**\n   * This responds to changes in the pfelement attribute; indicates if the component upgraded\n   * @TODO maybe we should use just the attribute instead of the class?\n   * https://github.com/angular/angular/issues/15399#issuecomment-318785677\n   */\n  _upgradeObserver() {\n    this.classList.add(\"PFElement\");\n  }\n\n  /**\n   * This responds to changes in the context attribute; manual override tool\n   */\n  _contextObserver(oldValue, newValue) {\n    if (newValue && ((oldValue && oldValue !== newValue) || !oldValue)) {\n      this.log(`Running the context observer`);\n      this.on = newValue;\n      this.cssVariable(\"context\", newValue);\n    }\n  }\n\n  /**\n   * This responds to changes in the context; source of truth for components\n   */\n  _onObserver(oldValue, newValue) {\n    if ((oldValue && oldValue !== newValue) || (newValue && !oldValue)) {\n      this.log(`Context update`);\n      // Fire an event for child components\n      this.contextUpdate();\n    }\n  }\n\n  /**\n   * This responds to inline style changes and greps for context or theme updates.\n   * @TODO: --theme will be deprecated in 2.0\n   */\n  _inlineStyleObserver(oldValue, newValue) {\n    if (oldValue === newValue) return;\n    // If there are no inline styles, a context might have been deleted, so call resetContext\n    if (!newValue) this.resetContext();\n    else {\n      this.log(`Style observer activated on ${this.tag}`, `${newValue || \"null\"}`);\n      // Grep for context/theme\n      const regex = /--[\\w|-]*(?:context|theme):\\s*(?:\\\"*(light|dark|saturated)\\\"*)/gi;\n      let match = regex.exec(newValue);\n\n      // If no match is returned, exit the observer\n      if (!match) return;\n\n      const newContext = match[1];\n      // If the new context value differs from the on value, update\n      if (newContext !== this.on && !this.context) this.on = newContext;\n    }\n  }\n\n  /**\n   * This is connected with a mutation observer that watches for updates to the light DOM\n   * and pushes down the cascading values\n   */\n  _parseObserver(mutationsList) {\n    // Iterate over the mutation list, look for cascade updates\n    for (let mutation of mutationsList) {\n      // If a new node is added, attempt to cascade attributes to it\n      if (mutation.type === \"childList\" && mutation.addedNodes.length) {\n        const nonTextNodes = [...mutation.addedNodes].filter((n) => n.nodeType !== HTMLElement.TEXT_NODE);\n        this.cascadeProperties(nonTextNodes);\n      }\n    }\n  }\n  /* --- End observers --- */\n\n  /**\n   * Validate that the property meets the requirements for type and naming.\n   */\n  static _validateProperties() {\n    for (let propName in this.allProperties) {\n      const propDef = this.allProperties[propName];\n\n      // Verify that properties conform to the allowed data types\n      if (!isAllowedType(propDef)) {\n        this.error(`Property \"${propName}\" on ${this.name} must have type String, Number, or Boolean.`);\n      }\n\n      // Verify the property name conforms to our naming rules\n      if (!/^[a-z_]/.test(propName)) {\n        this.error(\n          `Property ${this.name}.${propName} defined, but prop names must begin with a lower-case letter or an underscore`\n        );\n      }\n\n      const isFunction = typeof propDef.default === \"function\";\n\n      // If the default value is not the same type as defined by the property\n      // and it's not a function (we can't validate the output of the function\n      // on the class level), throw a warning\n      if (propDef.default && !isValidDefaultType(propDef) && !isFunction)\n        this.error(\n          `[${this.name}] The default value \\`${propDef.default}\\` does not match the assigned type ${propDef.type.name} for the \\'${propName}\\' property`\n        );\n    }\n  }\n\n  /**\n   * Convert provided property value to the correct type as defined in the properties method.\n   */\n  _castPropertyValue(propDef, attrValue) {\n    switch (propDef.type) {\n      case Number:\n        // map various attribute string values to their respective\n        // desired property values\n        return {\n          [attrValue]: Number(attrValue),\n          null: null,\n          NaN: NaN,\n          undefined: undefined,\n        }[attrValue];\n\n      case Boolean:\n        return attrValue !== null;\n\n      case String:\n        return {\n          [attrValue]: attrValue,\n          undefined: undefined,\n        }[attrValue];\n\n      default:\n        return attrValue;\n    }\n  }\n\n  /**\n   * Map provided value to the attribute name on the component.\n   */\n  _assignValueToAttribute(obj, attr, value) {\n    // If the default is false and the property is boolean, we don't need to do anything\n    const isBooleanFalse = obj.type === Boolean && !value;\n    const isNull = value === null;\n    const isUndefined = typeof value === \"undefined\";\n\n    // If the attribute is not defined, set the default value\n    if (isBooleanFalse || isNull || isUndefined) {\n      this.removeAttribute(attr);\n    } else {\n      // Boolean values get an empty string: https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n      if (obj.type === Boolean && typeof value === \"boolean\") {\n        this.setAttribute(attr, \"\");\n      } else {\n        // Validate against the provided values\n        if (obj.values) {\n          this._validateAttributeValue(obj, attr, value);\n        }\n\n        // Still accept the value provided even if it's not valid\n        this.setAttribute(attr, value);\n      }\n    }\n  }\n\n  /**\n   * Maps the defined slots into an object that is easier to query\n   */\n  _initializeSlots(tag, slots) {\n    this.log(\"Validate slots...\");\n\n    if (this._slotsObserver) this._slotsObserver.disconnect();\n\n    // Loop over the properties provided by the schema\n    Object.keys(slots).forEach((slot) => {\n      let slotObj = slots[slot];\n\n      // Only attach the information if the data provided is a schema object\n      if (typeof slotObj === \"object\") {\n        let slotExists = false;\n        let result = [];\n        // If it's a named slot, look for that slot definition\n        if (slotObj.namedSlot) {\n          // Check prefixed slots\n          result = this.getSlot(`${tag}--${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n\n          // Check for unprefixed slots\n          result = this.getSlot(`${slot}`);\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n          // If it's the default slot, look for direct children not assigned to a slot\n        } else {\n          result = [...this.children].filter((child) => !child.hasAttribute(\"slot\"));\n\n          if (result.length > 0) {\n            slotObj.nodes = result;\n            slotExists = true;\n          }\n        }\n\n        // If the slot exists, attach an attribute to the parent to indicate that\n        if (slotExists) {\n          this.setAttribute(`has_${slot}`, \"\");\n        } else {\n          this.removeAttribute(`has_${slot}`);\n        }\n      }\n    });\n\n    this.log(\"Slots validated.\");\n\n    if (this._slotsObserver) this._slotsObserver.observe(this, { childList: true });\n  }\n\n  /**\n   * Sets up the property definitions based on the properties method.\n   */\n  _initializeProperties() {\n    const properties = this._pfeClass.allProperties;\n    let hasCascade = false;\n\n    if (Object.keys(properties).length > 0) this.log(`Initialize properties`);\n\n    for (let propName in properties) {\n      const propDef = properties[propName];\n\n      // Check if the property exists, throw a warning if it does.\n      // HTMLElements have a LOT of properties; it wouldn't be hard\n      // to overwrite one accidentally.\n      if (typeof this[propName] !== \"undefined\") {\n        this.log(\n          `Property \"${propName}\" on ${this.constructor.name} cannot be defined because the property name is reserved`\n        );\n      } else {\n        const attrName = this._pfeClass._prop2attr(propName);\n        if (propDef.cascade) hasCascade = true;\n\n        Object.defineProperty(this, propName, {\n          get: () => {\n            const attrValue = this.getAttribute(attrName);\n\n            return this._castPropertyValue(propDef, attrValue);\n          },\n          set: (rawNewVal) => {\n            // Assign the value to the attribute\n            this._assignValueToAttribute(propDef, attrName, rawNewVal);\n\n            return rawNewVal;\n          },\n          writeable: true,\n          enumerable: true,\n          configurable: false,\n        });\n      }\n    }\n\n    // If any of the properties has cascade, attach a new mutation observer to the component\n    if (hasCascade) {\n      this._cascadeObserver = new MutationObserver(this._parseObserver);\n    }\n  }\n\n  /**\n   * Intialize the default value for an attribute.\n   */\n  _initializeAttributeDefaults() {\n    const properties = this._pfeClass.allProperties;\n\n    for (let propName in properties) {\n      const propDef = properties[propName];\n\n      const attrName = this._pfeClass._prop2attr(propName);\n\n      if (propDef.hasOwnProperty(\"default\")) {\n        let value = propDef.default;\n\n        // Check if default is a function\n        if (typeof propDef.default === \"function\") {\n          value = propDef.default(this);\n        }\n\n        // If the attribute has not already been set, assign the default value\n        if (!this.hasAttribute(attrName)) {\n          // Assign the value to the attribute\n          this._assignValueToAttribute(propDef, attrName, value);\n        }\n      }\n    }\n  }\n\n  /**\n   * Validate the value against provided values.\n   */\n  // @TODO add support for a validation function\n  _validateAttributeValue(propDef, attr, value) {\n    if (\n      Array.isArray(propDef.values) &&\n      propDef.values.length > 0 &&\n      !propDef.values.includes(value) // ||\n      // (typeof propDef.values === \"string\" && propDef.values !== value) ||\n      // (typeof propDef.values === \"function\" && !propDef.values(value))\n    ) {\n      this.warn(\n        `${value} is not a valid value for ${attr}. Please provide one of the following values: ${propDef.values.join(\n          \", \"\n        )}`\n      );\n    }\n\n    return value;\n  }\n\n  /**\n   * Look up an attribute name linked to a given property name.\n   */\n  static _prop2attr(propName) {\n    return this._getCache(\"prop2attr\")[propName];\n  }\n\n  /**\n   * Look up an property name linked to a given attribute name.\n   */\n  static _attr2prop(attrName) {\n    return this._getCache(\"attr2prop\")[attrName];\n  }\n\n  /**\n   * Convert a property name to an attribute name.\n   */\n  static _convertPropNameToAttrName(propName) {\n    const propDef = this.allProperties[propName];\n\n    if (propDef.attr) {\n      return propDef.attr;\n    }\n\n    return propName\n      .replace(/^_/, \"\")\n      .replace(/^[A-Z]/, (l) => l.toLowerCase())\n      .replace(/[A-Z]/g, (l) => `-${l.toLowerCase()}`);\n  }\n\n  /**\n   * Convert an attribute name to a property name.\n   */\n  static _convertAttrNameToPropName(attrName) {\n    for (let prop in this.allProperties) {\n      if (this.allProperties[prop].attr === attrName) {\n        return prop;\n      }\n    }\n\n    // Convert the property name to kebab case\n    const propName = attrName.replace(/-([A-Za-z])/g, (l) => l[1].toUpperCase());\n    return propName;\n  }\n\n  _cascadeAttributes(selectors, set) {\n    selectors.forEach((selector) => {\n      set[selector].forEach((attr) => {\n        this._cascadeAttribute(attr, selector);\n      });\n    });\n  }\n\n  /**\n   * Trigger a cascade of the named attribute to any child elements that match\n   * the `to` selector.  The selector can match elements in the light DOM and\n   * shadow DOM.\n   * @param {String} name The name of the attribute to cascade (not necessarily the same as the property name).\n   * @param {String} to A CSS selector that matches the elements that should received the cascaded attribute.  The selector will be applied within `this` element's light and shadow DOM trees.\n   */\n  _cascadeAttribute(name, to) {\n    const recipients = [...this.querySelectorAll(to), ...this.shadowRoot.querySelectorAll(to)];\n\n    for (const node of recipients) {\n      this._copyAttribute(name, node);\n    }\n  }\n\n  /**\n   * Copy the named attribute to a target element.\n   */\n  _copyAttribute(name, el) {\n    this.log(`copying ${name} to ${el}`);\n    const value = this.getAttribute(name);\n    const fname = value == null ? \"removeAttribute\" : \"setAttribute\";\n    el[fname](name, value);\n  }\n\n  static _convertSelectorsToArray(selectors) {\n    if (selectors) {\n      if (typeof selectors === \"string\") return selectors.split(\",\");\n      else if (typeof selectors === \"object\") return selectors;\n      else {\n        this.warn(`selectors should be provided as a string, array, or object; received: ${typeof selectors}.`);\n      }\n    }\n\n    return;\n  }\n\n  static _parsePropertiesForCascade(mergedProperties) {\n    let cascadingProperties = {};\n    // Parse the properties to pull out attributes that cascade\n    for (const [propName, config] of Object.entries(mergedProperties)) {\n      let cascadeTo = this._convertSelectorsToArray(config.cascade);\n\n      // Iterate over each node in the cascade list for this property\n      if (cascadeTo)\n        cascadeTo.map((nodeItem) => {\n          let attr = this._prop2attr(propName);\n          // Create an object with the node as the key and an array of attributes\n          // that are to be cascaded down to it\n          if (!cascadingProperties[nodeItem]) cascadingProperties[nodeItem] = [attr];\n          else cascadingProperties[nodeItem].push(attr);\n        });\n    }\n\n    return cascadingProperties;\n  }\n\n  /**\n   * Caching the attributes and properties data for efficiency\n   */\n  static create(pfe) {\n    pfe._createCache();\n    pfe._populateCache(pfe);\n    pfe._validateProperties();\n\n    try {\n      window.customElements.define(pfe.tag, pfe);\n    } catch (err) {\n      // Capture the class currently using this tag in the registry\n      const prevDefinition = window.customElements.get(pfe.tag);\n\n      // Check if the previous definition's version matches this one\n      if (prevDefinition && prevDefinition.version !== pfe.version) {\n        this.warn(\n          `${pfe.tag} was registered at version ${prevDefinition.version}; cannot register version ${pfe.version}.`\n        );\n      }\n\n      // @TODO Should this error be reported to the console?\n      if (err && err.message) this.log(err.message);\n    }\n\n    if (PFElement.trackPerformance()) {\n      try {\n        performance.mark(`${this._markId}-defined`);\n      } catch (err) {\n        this.log(`Performance marks are not supported by this browser.`);\n      }\n    }\n  }\n\n  static _createCache() {\n    this._cache = {\n      properties: {},\n      globalProperties: {},\n      componentProperties: {},\n      cascadingProperties: {},\n      attr2prop: {},\n      prop2attr: {},\n    };\n  }\n\n  /**\n   * Cache an object in a given cache namespace.  This overwrites anything\n   * already in that namespace.\n   */\n  static _setCache(namespace, object) {\n    this._cache[namespace] = object;\n  }\n\n  /**\n   * Get a cached object by namespace, or get all cached objects.\n   */\n  static _getCache(namespace) {\n    return namespace ? this._cache[namespace] : this._cache;\n  }\n\n  /**\n   * Populate initial values for properties cache.\n   */\n  static _populateCache(pfe) {\n    // @TODO add a warning when a component property conflicts with a global property.\n    const mergedProperties = { ...pfe.properties, ...PFElement.properties };\n\n    pfe._setCache(\"componentProperties\", pfe.properties);\n    pfe._setCache(\"globalProperties\", PFElement.properties);\n    pfe._setCache(\"properties\", mergedProperties);\n\n    // create mapping objects to go from prop name to attrname and back\n    const prop2attr = {};\n    const attr2prop = {};\n    for (let propName in mergedProperties) {\n      const attrName = this._convertPropNameToAttrName(propName);\n      prop2attr[propName] = attrName;\n      attr2prop[attrName] = propName;\n    }\n    pfe._setCache(\"attr2prop\", attr2prop);\n    pfe._setCache(\"prop2attr\", prop2attr);\n\n    const cascadingProperties = this._parsePropertiesForCascade(mergedProperties);\n    if (Object.keys(cascadingProperties)) pfe._setCache(\"cascadingProperties\", cascadingProperties);\n  }\n\n  /**\n   * allProperties returns an object containing PFElement's global properties\n   * and the descendents' (such as PfeCard, etc) component properties.  The two\n   * objects are merged together and in the case of a property name conflict,\n   * PFElement's properties override the component's properties.\n   */\n  static get allProperties() {\n    return this._getCache(\"properties\");\n  }\n\n  /**\n   * cascadingProperties returns an object containing PFElement's global properties\n   * and the descendents' (such as PfeCard, etc) component properties.  The two\n   * objects are merged together and in the case of a property name conflict,\n   * PFElement's properties override the component's properties.\n   */\n  static get cascadingProperties() {\n    return this._getCache(\"cascadingProperties\");\n  }\n\n  /**\n   * Breakpoint object mapping human-readable size names to viewport sizes\n   * To overwrite this at the component-level, include `static get breakpoint` in your component's class definition\n   * @returns {Object} keys are t-shirt sizes and values map to screen-sizes (sourced from PF4)\n   */\n  static get breakpoint() {\n    return {\n      xs: \"0px\", // $pf-global--breakpoint--xs: 0 !default;\n      sm: \"576px\", // $pf-global--breakpoint--sm: 576px !default;\n      md: \"768px\", // $pf-global--breakpoint--md: 768px !default;\n      lg: \"992px\", // $pf-global--breakpoint--lg: 992px !default;\n      xl: \"1200px\", // $pf-global--breakpoint--xl: 1200px !default;\n      \"2xl\": \"1450px\", // $pf-global--breakpoint--2xl: 1450px !default;\n    };\n  }\n}\n\n// Initialize the global instances\nPFElement.allInstances = [];\n\nautoReveal(PFElement.log);\n\n/** @module PFElement */\nexport default PFElement;\n"],"names":["logger","reveal","window","document","body","removeAttribute","autoReveal","logFunction","polyfillPresent","WebComponents","polyfillReady","ready","handleWebComponentsReady","addEventListener","isAllowedType","definition","String","Number","Boolean","includes","type","isValidDefaultType","hasOwnProperty","default","constructor","Array","prototype","Object","defineProperty","value","valueToFind","fromIndex","TypeError","o","len","length","n","k","Math","max","abs","sameValueZero","x","y","isNaN","entries","obj","ownProps","keys","i","resArray","startsWith","search","rawPos","pos","substring","Element","closest","s","el","matches","parentElement","parentNode","nodeType","msMatchesSelector","webkitMatchesSelector","find","predicate","thisArg","arguments","kValue","call","undefined","configurable","writable","prefix","PFElement","msgs","log","tag","id","warn","error","children","textContent","trim","name","filter","child","hasAttribute","getAttribute","isArray","reduce","element","substr","style","setProperty","getComputedStyle","getPropertyValue","lightEls","querySelectorAll","item","tagName","toLowerCase","slice","_pfeClass","_getCache","pfelement","shadowEls","shadowRoot","getRootNode","host","nestedEls","concat","map","resetContext","on","fallback","isIE11","context","contextVariable","version","random","toString","cssVariable","preference","localStorage","pfeLog","e","_debugLog","_trackPerformance","debugLog","Error","join","PfeConfig","Container","Content","Combo","title","observer","description","values","oldTheme","alias","attr","_style","properties","allProperties","oa","prop","cascade","p","_convertPropNameToAttrName","pfeClass","delayRender","_parseObserver","bind","test","navigator","userAgent","instances","_markId","randomId","replace","_markCount","schemaProps","schemaProperties","slots","template","createElement","_initializeProperties","attachShadow","mode","_rendered","render","_initializeAttributeDefaults","ShadyCSS","styleElement","push","allInstances","babelHelpers.typeof","_slotsObserver","MutationObserver","_initializeSlots","_cascadeObserver","disconnect","classIdx","globalIdx","oldVal","newVal","propName","_attr2prop","propDef","aliasedPropDef","aliasedAttr","_prop2attr","aliasedAttrVal","_castPropertyValue","_cascadeAttribute","_convertSelectorsToArray","innerHTML","html","prepareTemplate","appendChild","content","cloneNode","cascadeProperties","contextUpdate","trackPerformance","performance","mark","measure","err","observe","childList","attributes","subtree","bubbles","cancelable","composed","detail","dispatchEvent","CustomEvent","nodeList","selectors","forEach","nodeItem","selector","attrNames","attrName","_copyAttribute","components","customElements","whenDefined","Promise","all","then","_cascadeAttributes","classList","add","oldValue","newValue","regex","match","exec","newContext","mutationsList","mutation","addedNodes","nonTextNodes","HTMLElement","TEXT_NODE","attrValue","NaN","isBooleanFalse","isNull","isUndefined","setAttribute","_validateAttributeValue","slot","slotObj","slotExists","result","namedSlot","getSlot","nodes","hasCascade","get","set","rawNewVal","_assignValueToAttribute","writeable","enumerable","to","recipients","node","fname","isFunction","l","toUpperCase","split","mergedProperties","cascadingProperties","config","cascadeTo","pfe","_createCache","_populateCache","_validateProperties","define","prevDefinition","message","_cache","globalProperties","componentProperties","attr2prop","prop2attr","namespace","object","_setCache","_parsePropertiesForCascade","xs","sm","md","lg","xl"],"mappings":";;;;;;EAAA,IAAIA,SAAS;EAAA,SAAM,IAAN;EAAA,CAAb;;EAEA;;;;;EAKO,SAASC,MAAT,GAAkB;EACvBD;EACAE,SAAOC,QAAP,CAAgBC,IAAhB,CAAqBC,eAArB,CAAqC,YAArC;EACD;;EAED;;;;;;EAMO,SAASC,UAAT,CAAoBC,WAApB,EAAiC;EACtCP,WAASO,WAAT;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,kBAAkBN,OAAOO,aAA/B;EACA,MAAMC,gBAAgBF,mBAAmBN,OAAOO,aAAP,CAAqBE,KAA9D;;EAEA,MAAI,CAACH,eAAD,IAAoBE,aAAxB,EAAuC;EACrCE;EACD,GAFD,MAEO;EACLV,WAAOW,gBAAP,CAAwB,oBAAxB,EAA8CD,wBAA9C;EACD;EACF;;EAED;;;;EAIA,SAASA,wBAAT,GAAoC;EAClCZ,SAAO,+BAAP;EACAC;EACD;;EC1CD;;;;;;;AAOA,EAAO,SAASa,aAAT,CAAuBC,UAAvB,EAAmC;EACxC,SAAO,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,EAA0BC,QAA1B,CAAmCJ,WAAWK,IAAX,IAAmBJ,MAAtD,CAAP;EACD;;EAED;;;;;;;;;AASA,EAAO,SAASK,kBAAT,CAA4BN,UAA5B,EAAwC;EAC7C,SAAOA,WAAWO,cAAX,CAA0B,SAA1B,KAAwCP,WAAWQ,OAAX,CAAmBC,WAAnB,KAAmCT,WAAWK,IAA7F;EACD;;ECtBD;EACA;EACA,IAAI,CAACK,MAAMC,SAAN,CAAgBP,QAArB,EAA+B;EAC7BQ,SAAOC,cAAP,CAAsBH,MAAMC,SAA5B,EAAuC,UAAvC,EAAmD;EACjDG,WAAO,eAAUC,WAAV,EAAuBC,SAAvB,EAAkC;EACvC,UAAI,QAAQ,IAAZ,EAAkB;EAChB,cAAM,IAAIC,SAAJ,CAAc,+BAAd,CAAN;EACD;;EAED;EACA,UAAIC,IAAIN,OAAO,IAAP,CAAR;;EAEA;EACA,UAAIO,MAAMD,EAAEE,MAAF,KAAa,CAAvB;;EAEA;EACA,UAAID,QAAQ,CAAZ,EAAe;EACb,eAAO,KAAP;EACD;;EAED;EACA;EACA,UAAIE,IAAIL,YAAY,CAApB;;EAEA;EACA;EACA;EACA;EACA;EACA,UAAIM,IAAIC,KAAKC,GAAL,CAASH,KAAK,CAAL,GAASA,CAAT,GAAaF,MAAMI,KAAKE,GAAL,CAASJ,CAAT,CAA5B,EAAyC,CAAzC,CAAR;;EAEA,eAASK,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;EAC3B,eAAOD,MAAMC,CAAN,IAAY,OAAOD,CAAP,KAAa,QAAb,IAAyB,OAAOC,CAAP,KAAa,QAAtC,IAAkDC,MAAMF,CAAN,CAAlD,IAA8DE,MAAMD,CAAN,CAAjF;EACD;;EAED;EACA,aAAON,IAAIH,GAAX,EAAgB;EACd;EACA;EACA,YAAIO,cAAcR,EAAEI,CAAF,CAAd,EAAoBP,WAApB,CAAJ,EAAsC;EACpC,iBAAO,IAAP;EACD;EACD;EACAO;EACD;;EAED;EACA,aAAO,KAAP;EACD;EA7CgD,GAAnD;EA+CD;;EAED;EACA;EACA,IAAI,CAACV,OAAOkB,OAAZ,EAAqB;EACnBlB,SAAOkB,OAAP,GAAiB,UAAUC,GAAV,EAAe;EAC9B,QAAIC,WAAWpB,OAAOqB,IAAP,CAAYF,GAAZ,CAAf;EAAA,QACEG,IAAIF,SAASZ,MADf;EAAA,QAEEe,WAAW,IAAIzB,KAAJ,CAAUwB,CAAV,CAFb,CAD8B;EAI9B,WAAOA,GAAP;EAAYC,eAASD,CAAT,IAAc,CAACF,SAASE,CAAT,CAAD,EAAcH,IAAIC,SAASE,CAAT,CAAJ,CAAd,CAAd;EAAZ,KAEA,OAAOC,QAAP;EACD,GAPD;EAQD;;EAED;EACA;EACA,IAAI,CAAClC,OAAOU,SAAP,CAAiByB,UAAtB,EAAkC;EAChCxB,SAAOC,cAAP,CAAsBZ,OAAOU,SAA7B,EAAwC,YAAxC,EAAsD;EACpDG,WAAO,eAAUuB,MAAV,EAAkBC,MAAlB,EAA0B;EAC/B,UAAIC,MAAMD,SAAS,CAAT,GAAaA,SAAS,CAAtB,GAA0B,CAApC;EACA,aAAO,KAAKE,SAAL,CAAeD,GAAf,EAAoBA,MAAMF,OAAOjB,MAAjC,MAA6CiB,MAApD;EACD;EAJmD,GAAtD;EAMD;;EAED;EACA;EACA,IAAI,CAACI,QAAQ9B,SAAR,CAAkB+B,OAAvB,EAAgC;EAC9BD,UAAQ9B,SAAR,CAAkB+B,OAAlB,GAA4B,UAAUC,CAAV,EAAa;EACvC,QAAIC,KAAK,IAAT;EACA,OAAG;EACD,UAAIA,GAAGC,OAAH,CAAWF,CAAX,CAAJ,EAAmB,OAAOC,EAAP;EACnBA,WAAKA,GAAGE,aAAH,IAAoBF,GAAGG,UAA5B;EACD,KAHD,QAGSH,OAAO,IAAP,IAAeA,GAAGI,QAAH,KAAgB,CAHxC;EAIA,WAAO,IAAP;EACD,GAPD;EAQD;;EAED;EACA;EACA,IAAI,CAACP,QAAQ9B,SAAR,CAAkBkC,OAAvB,EAAgC;EAC9BJ,UAAQ9B,SAAR,CAAkBkC,OAAlB,GAA4BJ,QAAQ9B,SAAR,CAAkBsC,iBAAlB,IAAuCR,QAAQ9B,SAAR,CAAkBuC,qBAArF;EACD;;EAED;EACA;EACA,IAAI,CAACxC,MAAMC,SAAN,CAAgBwC,IAArB,EAA2B;EACzBvC,SAAOC,cAAP,CAAsBH,MAAMC,SAA5B,EAAuC,MAAvC,EAA+C;EAC7CG,WAAO,eAAUsC,SAAV,EAAqB;EAC1B;EACA,UAAI,QAAQ,IAAZ,EAAkB;EAChB,cAAM,IAAInC,SAAJ,CAAc,+BAAd,CAAN;EACD;;EAED,UAAIC,IAAIN,OAAO,IAAP,CAAR;;EAEA;EACA,UAAIO,MAAMD,EAAEE,MAAF,KAAa,CAAvB;;EAEA;EACA,UAAI,OAAOgC,SAAP,KAAqB,UAAzB,EAAqC;EACnC,cAAM,IAAInC,SAAJ,CAAc,8BAAd,CAAN;EACD;;EAED;EACA,UAAIoC,UAAUC,UAAU,CAAV,CAAd;;EAEA;EACA,UAAIhC,IAAI,CAAR;;EAEA;EACA,aAAOA,IAAIH,GAAX,EAAgB;EACd;EACA;EACA;EACA;EACA,YAAIoC,SAASrC,EAAEI,CAAF,CAAb;EACA,YAAI8B,UAAUI,IAAV,CAAeH,OAAf,EAAwBE,MAAxB,EAAgCjC,CAAhC,EAAmCJ,CAAnC,CAAJ,EAA2C;EACzC,iBAAOqC,MAAP;EACD;EACD;EACAjC;EACD;;EAED;EACA,aAAOmC,SAAP;EACD,KAvC4C;EAwC7CC,kBAAc,IAxC+B;EAyC7CC,cAAU;EAzCmC,GAA/C;EA2CD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EC7ID;;;;;;;;;;;;;;;;;;;;;;;;;EA+BA;EACA;EACA;EACA;EACA,IAAMC,SAAS,KAAf;;EAEA;;;;;;;MAMMC;;;;;;EAwDJ;;;;;4BAKa;EAAA,wCAANC,IAAM;EAANA,YAAM;EAAA;;EACXD,gBAAUE,GAAV,yBAAkB,KAAKC,GAAvB,IAA6B,KAAKC,EAAL,SAAc,KAAKA,EAAnB,GAA0B,EAAvD,gBAAiEH,IAAjE;EACD;;EAED;;;;;;;;;;EASA;;;;;6BAKc;EAAA,yCAANA,IAAM;EAANA,YAAM;EAAA;;EACZD,gBAAUK,IAAV,yBAAmB,KAAKF,GAAxB,IAA8B,KAAKC,EAAL,SAAc,KAAKA,EAAnB,KAA9B,gBAAkEH,IAAlE;EACD;;EAED;;;;;;;;;;EASA;;;;;8BAKe;EAAA,yCAANA,IAAM;EAANA,YAAM;EAAA;;EACbD,gBAAUM,KAAV,yBAAoB,KAAKH,GAAzB,IAA+B,KAAKC,EAAL,SAAc,KAAKA,EAAnB,KAA/B,gBAAmEH,IAAnE;EACD;;EAED;;;;;;;;;EA+GA;;;;;oCAKc;EACZ,aAAO,KAAKM,QAAL,CAAchD,MAAd,IAAwB,KAAKiD,WAAL,CAAiBC,IAAjB,GAAwBlD,MAAvD;EACD;;EAED;;;;;;;;;8BAMQmD,MAAM;EAAA;;EACZ,UAAI,CAACA,IAAL,EAAW;EACT,aAAKL,IAAL;EACA;EACD;;EAED,UAAI,OAAOK,IAAP,KAAgB,QAApB,EAA8B;EAC5B,eACE,4BAAI,KAAKH,QAAT,GAAmBI,MAAnB,CAA0B,UAACC,KAAD;EAAA,iBAAWA,MAAMC,YAAN,CAAmB,MAAnB,KAA8BD,MAAME,YAAN,CAAmB,MAAnB,MAA+BJ,IAAxE;EAAA,SAA1B,EAAwGnD,MAAxG,GACA,CAFF;EAID,OALD,MAKO,IAAIV,MAAMkE,OAAN,CAAcL,IAAd,CAAJ,EAAyB;EAC9B,eAAOA,KAAKM,MAAL,CACL,UAACxD,CAAD;EAAA,iBACE,4BAAI,OAAK+C,QAAT,GAAmBI,MAAnB,CAA0B,UAACC,KAAD;EAAA,mBAAWA,MAAMC,YAAN,CAAmB,MAAnB,KAA8BD,MAAME,YAAN,CAAmB,MAAnB,MAA+BtD,CAAxE;EAAA,WAA1B,EAAqGD,MAArG,GACA,CAFF;EAAA,SADK,CAAP;EAKD,OANM,MAMA;EACL,aAAK8C,IAAL,sFAA4FK,IAA5F,yCAA4FA,IAA5F;EACA;EACD;EACF;;EAED;;;;;;;;;gCAM6B;EAAA,UAArBA,IAAqB,uEAAd,YAAc;;EAC3B,UAAIA,SAAS,YAAb,EAA2B;EACzB,eAAO,4BAAI,KAAKH,QAAT,GAAmBI,MAAnB,CAA0B,UAACC,KAAD;EAAA,iBAAWA,MAAMC,YAAN,CAAmB,MAAnB,KAA8BD,MAAME,YAAN,CAAmB,MAAnB,MAA+BJ,IAAxE;EAAA,SAA1B,CAAP;EACD,OAFD,MAEO;EACL,eAAO,4BAAI,KAAKH,QAAT,GAAmBI,MAAnB,CAA0B,UAACC,KAAD;EAAA,iBAAW,CAACA,MAAMC,YAAN,CAAmB,MAAnB,CAAZ;EAAA,SAA1B,CAAP;EACD;EACF;;;kCAEWH,MAAMzD,OAAuB;EAAA,UAAhBgE,OAAgB,uEAAN,IAAM;;EACvCP,aAAOA,KAAKQ,MAAL,CAAY,CAAZ,EAAe,CAAf,MAAsB,IAAtB,GAA6B,OAAOR,IAApC,GAA2CA,IAAlD;EACA,UAAIzD,KAAJ,EAAW;EACTgE,gBAAQE,KAAR,CAAcC,WAAd,CAA0BV,IAA1B,EAAgCzD,KAAhC;EACA,eAAOA,KAAP;EACD;EACD,aAAO3B,OAAO+F,gBAAP,CAAwBJ,OAAxB,EAAiCK,gBAAjC,CAAkDZ,IAAlD,EAAwDD,IAAxD,MAAkE,IAAzE;EACD;;EAED;;;;;;sCAGgB;EAAA;;EACd;EACA,UAAMc,WAAW,4BAAI,KAAKC,gBAAL,CAAsB,GAAtB,CAAJ,GACdb,MADc,CACP,UAACc,IAAD;EAAA,eAAUA,KAAKC,OAAL,CAAaC,WAAb,GAA2BC,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,MAA8C7B,MAA9C,MAAV;EAAA,OADO;EAEf;EAFe,OAGdY,MAHc,CAGP,UAACc,IAAD,EAAU;EAChB;EACA,YAAI,CAACA,KAAKxC,aAAV,EAAyB;EACzB;EADA,aAEK,OAAOwC,KAAKxC,aAAL,CAAmBJ,OAAnB,OAA+B,OAAKgD,SAAL,CAAeC,SAAf,CAAyB,WAAzB,EAAsCC,SAArE,YAAuF,MAA9F;EACN,OARc,CAAjB;;EAUA;EACA,UAAIC,YAAY,4BAAI,KAAKC,UAAL,CAAgBT,gBAAhB,CAAiC,GAAjC,CAAJ,GACbb,MADa,CACN,UAACc,IAAD;EAAA,eAAUA,KAAKC,OAAL,CAAaC,WAAb,GAA2BC,KAA3B,CAAiC,CAAjC,EAAoC,CAApC,MAA8C7B,MAA9C,MAAV;EAAA,OADM;EAEd;EAFc,OAGbY,MAHa,CAGN,UAACc,IAAD,EAAU;EAChB;EACA,YAAIA,KAAKxC,aAAL,IAAsBwC,KAAKxC,aAAL,CAAmBJ,OAAnB,OAA+B,OAAKgD,SAAL,CAAeC,SAAf,CAAyB,WAAzB,EAAsCC,SAArE,OAA1B,EAA8G;EAC5G,iBAAON,KAAKxC,aAAL,CAAmBJ,OAAnB,OAA+B,OAAKgD,SAAL,CAAeC,SAAf,CAAyB,WAAzB,EAAsCC,SAArE,YAAuF,MAA9F;EACD;EACD;EACA,YAAIN,KAAKS,WAAL,GAAmBC,IAAnB,KAA4B,MAAhC,EAAsC,OAAO,IAAP;;EAEtC;EACA,eAAO,KAAP;EACD,OAba,CAAhB;;EAeA,UAAMC,YAAYb,SAASc,MAAT,CAAgBL,SAAhB,CAAlB;;EAEA;EACA,UAAII,UAAU7E,MAAV,KAAqB,CAAzB,EAA4B;;EAE5B;EACA6E,gBAAUE,GAAV,CAAc,UAAC1B,KAAD,EAAW;EACvB,YAAIA,MAAM2B,YAAV,EAAwB;EACtB,iBAAKrC,GAAL,wBAA8BU,MAAMc,OAAN,CAAcC,WAAd,EAA9B;;EAEA;EACAf,gBAAM2B,YAAN,CAAmB,OAAKC,EAAxB;EACD;EACF,OAPD;EAQD;;;mCAEYC,UAAU;EACrB,UAAI,KAAKC,MAAT,EAAiB;;EAEjB;EACA;EACA;EACA,UAAIzF,QAAQ,KAAK0F,OAAL,IAAgB,KAAKC,eAArB,IAAwCH,QAApD;;EAEA;EACA;EACA,UAAI,KAAKD,EAAL,KAAYvF,KAAZ,IAAsB,CAAC,KAAKuF,EAAN,IAAY,CAACvF,KAAvC,EAA+C;;EAE/C,WAAKiD,GAAL,6BAAmC,KAAKsC,EAAxC,aAAiDvF,SAAS,MAA1D;EACA,WAAKuF,EAAL,GAAUvF,KAAV;EACD;;;;;EAtND;;;;;0BAKc;EACZ,aAAO,KAAK4E,SAAL,CAAegB,OAAtB;EACD;;EAED;;;;;;;;EAyDA;;;;;;0BAMe;EACb,aAAU9C,MAAH,SAAerC,KAAKoF,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2B7B,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAtB;EACD;;EAED;;;;;;wBAGoBjE,OAAO;EACzB,WAAK+F,WAAL,CAAiB,SAAjB,EAA4B/F,KAA5B;EACD;;EAED;;;;;0BAIsB;EACpB;EACA,aAAO,KAAK+F,WAAL,CAAiB,SAAjB,KAA+B,KAAKA,WAAL,CAAiB,OAAjB,CAAtC;EACD;;;;EAjND;;;;;;iCAMmC;EAAA,UAAnBC,UAAmB,uEAAN,IAAM;;EACjC,UAAIA,eAAe,IAAnB,EAAyB;EACvB;EACA;EACA,YAAI;EACFC,uBAAaC,MAAb,GAAsB,CAAC,CAACF,UAAxB;EACD,SAFD,CAEE,OAAOG,CAAP,EAAU;EACV;EACApD,oBAAUqD,SAAV,GAAsB,CAAC,CAACJ,UAAxB;EACA,iBAAOjD,UAAUqD,SAAjB;EACD;EACF;EACD;EACA,aAAOH,aAAaC,MAAb,KAAwB,MAAxB,IAAkCnD,UAAUqD,SAAnD;EACD;;EAED;;;;;;;;yCAK2C;EAAA,UAAnBJ,UAAmB,uEAAN,IAAM;;EACzC,UAAIA,eAAe,IAAnB,EAAyB;EACvBjD,kBAAUsD,iBAAV,GAA8B,CAAC,CAACL,UAAhC;EACD;EACD,aAAOjD,UAAUsD,iBAAjB;EACD;;EAED;;;;;;;;;;EAUA;;;;;4BAKoB;EAClB,UAAItD,UAAUuD,QAAV,EAAJ,EAA0B;EAAA;;EACxB,6BAAQrD,GAAR;EACD;EACF;;;6BAgBoB;EAAA;;EACnB,4BAAQG,IAAR;EACD;;;8BAgBqB;EAAA,yCAANJ,IAAM;EAANA,YAAM;EAAA;;EACpB,YAAM,IAAIuD,KAAJ,CAAU,UAAIvD,IAAJ,EAAUwD,IAAV,CAAe,GAAf,CAAV,CAAN;EACD;;;0BAlDmB;EAClB;EACA,aAAOnI,OAAOoI,SAAP,IAAoB,EAA3B;EACD;;;0BA8DqB;EACpB,aAAO;EACLC,mBAAW,WADN;EAELC,iBAAS,SAFJ;EAGLC,eAAO;EAHF,OAAP;EAKD;;EAED;;;;;;0BAGqB;EACnB,aAAO,QAAP;EACD;;;0BAcuB;EACtB,aAAO;EACL9B,mBAAW;EACT+B,iBAAO,eADE;EAETtH,gBAAMF,OAFG;EAGTK,mBAAS,IAHA;EAIToH,oBAAU;EAJD,SADN;EAOLvB,YAAI;EACFsB,iBAAO,SADL;EAEFE,uBAAa,6CAFX;EAGFxH,gBAAMJ,MAHJ;EAIF6H,kBAAQ,CAAC,OAAD,EAAU,MAAV,EAAkB,WAAlB,CAJN;EAKFtH,mBAAS,kBAACoC,EAAD;EAAA,mBAAQA,GAAG6D,eAAX;EAAA,WALP;EAMFmB,oBAAU;EANR,SAPC;EAeLpB,iBAAS;EACPmB,iBAAO,cADA;EAEPE,uBAAa,2CAFN;EAGPxH,gBAAMJ,MAHC;EAIP6H,kBAAQ,CAAC,OAAD,EAAU,MAAV,EAAkB,WAAlB,CAJD;EAKPF,oBAAU;EALH,SAfJ;EAsBL;EACAG,kBAAU;EACR1H,gBAAMJ,MADE;EAER6H,kBAAQ,CAAC,OAAD,EAAU,MAAV,EAAkB,WAAlB,CAFA;EAGRE,iBAAO,SAHC;EAIRC,gBAAM;EAJE,SAvBL;EA6BLC,gBAAQ;EACNP,iBAAO,eADD;EAENtH,gBAAMJ,MAFA;EAGNgI,gBAAM,OAHA;EAINL,oBAAU;EAJJ,SA7BH;EAmCLvH,cAAM;EACJsH,iBAAO,gBADH;EAEJtH,gBAAMJ,MAFF;EAGJ6H,kBAAQ,CAAC,WAAD,EAAc,SAAd,EAAyB,OAAzB;EAHJ;EAnCD,OAAP;EAyCD;;;0BAE+B;EAAA;;EAC9B,UAAMK,aAAa,KAAKC,aAAxB;EACA,UAAID,UAAJ,EAAgB;EACd,YAAME,KAAKzH,OAAOqB,IAAP,CAAYkG,UAAZ,EACR3D,MADQ,CACD,UAAC8D,IAAD;EAAA,iBAAUH,WAAWG,IAAX,EAAiBV,QAAjB,IAA6BO,WAAWG,IAAX,EAAiBC,OAA9C,IAAyDJ,WAAWG,IAAX,EAAiBN,KAApF;EAAA,SADC,EAER7B,GAFQ,CAEJ,UAACqC,CAAD;EAAA,iBAAO,OAAKC,0BAAL,CAAgCD,CAAhC,CAAP;EAAA,SAFI,CAAX;EAGA,2CAAWH,EAAX;EACD;EACF;;;EAwJD,qBAAYK,QAAZ,EAAiE;EAAA,mFAAJ,EAAI;EAAA,yBAAzCrI,IAAyC;EAAA,QAAzCA,IAAyC,6BAAlC,IAAkC;EAAA,gCAA5BsI,WAA4B;EAAA,QAA5BA,WAA4B,oCAAd,KAAc;;EAAA;;EAAA;;EAG/D,UAAKjD,SAAL,GAAiBgD,QAAjB;EACA,UAAK1E,GAAL,GAAW0E,SAAS1E,GAApB;EACA,UAAK4E,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;EACA,UAAKtC,MAAL,GAAc,sBAAsBuC,IAAtB,CAA2B3J,OAAO4J,SAAP,CAAiBC,SAA5C,CAAd;;EAEA;EACA;EACA,QAAI,CAAC,MAAKtD,SAAL,CAAeuD,SAAhB,IAA6B,EAAE,MAAKvD,SAAL,CAAeuD,SAAf,CAAyB7H,MAAzB,IAAmC,CAArC,CAAjC,EAA0E,MAAKsE,SAAL,CAAeuD,SAAf,GAA2B,EAA3B;;EAE1E;EACA,QAAI,CAAC,MAAKhF,EAAV,EAAc;EACZ,YAAKiF,OAAL,GAAe,MAAKC,QAAL,CAAcC,OAAd,CAAsB,KAAtB,EAA6B,MAAKpF,GAAlC,CAAf;EACD,KAFD,MAEO,IAAI,MAAKC,EAAL,CAAQ7B,UAAR,CAAmB,MAAnB,KAA8B,CAAC,MAAK6B,EAAL,CAAQ7B,UAAR,CAAmB,MAAK4B,GAAxB,CAAnC,EAAiE;EACtE,YAAKkF,OAAL,GAAe,MAAKjF,EAAL,CAAQmF,OAAR,CAAgB,KAAhB,EAAuB,MAAKpF,GAA5B,CAAf;EACD,KAFM,MAEA;EACL,YAAKkF,OAAL,GAAkB,MAAKlF,GAAvB,SAA8B,MAAKC,EAAnC;EACD;;EAED,UAAKoF,UAAL,GAAkB,CAAlB;;EAEA;EACA,UAAKC,WAAL,GAAmBZ,SAASa,gBAA5B;;EAEA;EACA,UAAKC,KAAL,GAAad,SAASc,KAAtB;;EAEA,UAAKC,QAAL,GAAgBrK,SAASsK,aAAT,CAAuB,UAAvB,CAAhB;;EAEA;EACA,QAAIrJ,QAAQ,MAAKqF,SAAL,CAAe0C,aAAf,CAA6B/H,IAAzC,EAA+C,MAAKqF,SAAL,CAAe0C,aAAf,CAA6B/H,IAA7B,CAAkCG,OAAlC,GAA4CH,IAA5C;;EAE/C;EACA,UAAKsJ,qBAAL;;EAEA,UAAKC,YAAL,CAAkB,EAAEC,MAAM,MAAR,EAAlB;;EAEA;EACA;EACA,UAAKC,SAAL,GAAiB,KAAjB;;EAEA,QAAI,CAACnB,WAAL,EAAkB,MAAKoB,MAAL;EA3C6C;EA4ChE;;EAED;;;;;;;0CAGoB;EAAA;;EAClB,WAAKC,4BAAL;;EAEA,UAAI7K,OAAO8K,QAAX,EAAqB9K,OAAO8K,QAAP,CAAgBC,YAAhB,CAA6B,IAA7B;;EAErB;EACA,WAAKxE,SAAL,CAAeuD,SAAf,CAAyBkB,IAAzB,CAA8B,IAA9B;EACAtG,gBAAUuG,YAAV,CAAuBD,IAAvB,CAA4B,IAA5B;;EAEA;EACA,UAAIE,QAAO,KAAKb,KAAZ,MAAsB,QAA1B,EAAoC;EAClC,aAAKc,cAAL,GAAsB,IAAIC,gBAAJ,CAAqB;EAAA,iBAAM,OAAKC,gBAAL,CAAsB,OAAKxG,GAA3B,EAAgC,OAAKwF,KAArC,CAAN;EAAA,SAArB,CAAtB;EACA,aAAKgB,gBAAL,CAAsB,KAAKxG,GAA3B,EAAgC,KAAKwF,KAArC;EACD;EACF;;EAED;;;;;;;6CAIuB;EAAA;;EACrB,UAAI,KAAKiB,gBAAT,EAA2B,KAAKA,gBAAL,CAAsBC,UAAtB;EAC3B,UAAI,KAAKJ,cAAT,EAAyB,KAAKA,cAAL,CAAoBI,UAApB;;EAEzB;EACA,UAAMC,WAAW,KAAKjF,SAAL,CAAeuD,SAAf,CAAyB9F,IAAzB,CAA8B,UAACmC,IAAD;EAAA,eAAUA,SAAS,MAAnB;EAAA,OAA9B,CAAjB;EACA,aAAO,KAAKI,SAAL,CAAeuD,SAAf,CAAyB0B,QAAzB,CAAP;;EAEA,UAAMC,YAAY/G,UAAUuG,YAAV,CAAuBjH,IAAvB,CAA4B,UAACmC,IAAD;EAAA,eAAUA,SAAS,MAAnB;EAAA,OAA5B,CAAlB;EACA,aAAOzB,UAAUuG,YAAV,CAAuBQ,SAAvB,CAAP;EACD;;EAED;;;;;;;+CAIyB3C,MAAM4C,QAAQC,QAAQ;EAC7C,UAAI,CAAC,KAAKpF,SAAL,CAAe0C,aAApB,EAAmC;;EAEnC,UAAI2C,WAAW,KAAKrF,SAAL,CAAesF,UAAf,CAA0B/C,IAA1B,CAAf;;EAEA,UAAMgD,UAAU,KAAKvF,SAAL,CAAe0C,aAAf,CAA6B2C,QAA7B,CAAhB;;EAEA;EACA,UAAIE,OAAJ,EAAa;EACX;EACA,YAAIA,QAAQjD,KAAZ,EAAmB;EACjB,cAAMkD,iBAAiB,KAAKxF,SAAL,CAAe0C,aAAf,CAA6B6C,QAAQjD,KAArC,CAAvB;EACA,cAAMmD,cAAc,KAAKzF,SAAL,CAAe0F,UAAf,CAA0BH,QAAQjD,KAAlC,CAApB;EACA,cAAMqD,iBAAiB,KAAK1G,YAAL,CAAkBwG,WAAlB,CAAvB;EACA,cAAIE,mBAAmBP,MAAvB,EAA+B;EAC7B,iBAAKG,QAAQjD,KAAb,IAAsB,KAAKsD,kBAAL,CAAwBJ,cAAxB,EAAwCJ,MAAxC,CAAtB;EACD;EACF;;EAED;EACA;EACA,YAAIG,QAAQrD,QAAZ,EAAsB;EACpB,eAAKqD,QAAQrD,QAAb,EAAuB,KAAK0D,kBAAL,CAAwBL,OAAxB,EAAiCJ,MAAjC,CAAvB,EAAiE,KAAKS,kBAAL,CAAwBL,OAAxB,EAAiCH,MAAjC,CAAjE;EACD;;EAED;EACA;EACA,YAAIG,QAAQ1C,OAAZ,EAAqB;EACnB,eAAKgD,iBAAL,CAAuBtD,IAAvB,EAA6B,KAAKvC,SAAL,CAAe8F,wBAAf,CAAwCP,QAAQ1C,OAAhD,CAA7B;EACD;EACF;EACF;;EAED;;;;;;+BAGS;EACP,WAAKzC,UAAL,CAAgB2F,SAAhB,GAA4B,EAA5B;EACA,WAAKhC,QAAL,CAAcgC,SAAd,GAA0B,KAAKC,IAA/B;;EAEA,UAAIvM,OAAO8K,QAAX,EAAqB;EACnB9K,eAAO8K,QAAP,CAAgB0B,eAAhB,CAAgC,KAAKlC,QAArC,EAA+C,KAAKzF,GAApD;EACD;;EAED,WAAK8B,UAAL,CAAgB8F,WAAhB,CAA4B,KAAKnC,QAAL,CAAcoC,OAAd,CAAsBC,SAAtB,CAAgC,IAAhC,CAA5B;;EAEA,WAAK/H,GAAL;;EAEA;EACA,WAAKgI,iBAAL;;EAEA;EACA,WAAKC,aAAL;;EAEA,UAAInI,UAAUoI,gBAAV,EAAJ,EAAkC;EAChC,YAAI;EACFC,sBAAYC,IAAZ,CAAoB,KAAKjD,OAAzB;;EAEA,cAAI,KAAKG,UAAL,GAAkB,CAAtB,EAAyB;EACvB,iBAAKA,UAAL,GAAkB,KAAKA,UAAL,GAAkB,CAApC;;EAEA;EACA6C,wBAAYE,OAAZ,CAAuB,KAAKlD,OAA5B,uCAAuEzF,SAAvE,EAAqF,KAAKyF,OAA1F;;EAEA;EACAgD,wBAAYE,OAAZ,CACK,KAAKlD,OADV,oCAEK,KAAKA,OAFV,eAGK,KAAKA,OAHV;EAKD;EACF,SAhBD,CAgBE,OAAOmD,GAAP,EAAY;EACZ,eAAKtI,GAAL;EACD;EACF;;EAED;EACA,UAAIsG,QAAO,KAAKb,KAAZ,MAAsB,QAAtB,IAAkC,KAAKc,cAA3C,EAA2D;EACzD,aAAKA,cAAL,CAAoBgC,OAApB,CAA4B,IAA5B,EAAkC,EAAEC,WAAW,IAAb,EAAlC;EACD;;EAED;EACA,UAAI,KAAK9B,gBAAT,EAA2B;EACzB,aAAKA,gBAAL,CAAsB6B,OAAtB,CAA8B,IAA9B,EAAoC;EAClCE,sBAAY,IADsB;EAElCD,qBAAW,IAFuB;EAGlCE,mBAAS;EAHyB,SAApC;EAKD;;EAED,WAAK3C,SAAL,GAAiB,IAAjB;EACD;;EAED;;;;;;gCAGUvF,MAAiF;EAAA,sFAAJ,EAAI;EAAA,gCAAzEmI,OAAyE;EAAA,UAAzEA,OAAyE,iCAA/D,IAA+D;EAAA,mCAAzDC,UAAyD;EAAA,UAAzDA,UAAyD,oCAA5C,KAA4C;EAAA,iCAArCC,QAAqC;EAAA,UAArCA,QAAqC,kCAA1B,IAA0B;EAAA,+BAApBC,MAAoB;EAAA,UAApBA,MAAoB,gCAAX,EAAW;;EACzF,UAAIA,MAAJ,EAAY,KAAK9I,GAAL,oBAA0BQ,IAA1B,EAAkCsI,MAAlC,EAAZ,KACK,KAAK9I,GAAL,oBAA0BQ,IAA1B;;EAEL,WAAKuI,aAAL,CACE,IAAIC,WAAJ,CAAgBxI,IAAhB,EAAsB;EACpBmI,wBADoB;EAEpBC,8BAFoB;EAGpBC,0BAHoB;EAIpBC;EAJoB,OAAtB,CADF;EAQD;;EAED;;;;;;;wCAIkBG,UAAU;EAAA;;EAC1B,UAAMzE,UAAU,KAAK7C,SAAL,CAAeC,SAAf,CAAyB,qBAAzB,CAAhB;;EAEA,UAAI4C,OAAJ,EAAa;EACX,YAAI,KAAKkC,gBAAT,EAA2B,KAAKA,gBAAL,CAAsBC,UAAtB;;EAE3B,YAAIuC,YAAYrM,OAAOqB,IAAP,CAAYsG,OAAZ,CAAhB;EACA;EACA,YAAI0E,SAAJ,EAAe;EACb,cAAID,QAAJ,EAAc;EACZ,wCAAIA,QAAJ,GAAcE,OAAd,CAAsB,UAACC,QAAD,EAAc;EAClCF,wBAAUC,OAAV,CAAkB,UAACE,QAAD,EAAc;EAC9B;EACA;EACA,oBAAID,SAAStK,OAAT,IAAoBsK,SAAStK,OAAT,CAAiBuK,QAAjB,CAAxB,EAAoD;EAClD,sBAAIC,YAAY9E,QAAQ6E,QAAR,CAAhB;EACA;EACA;EACAC,4BAAUH,OAAV,CAAkB,UAACI,QAAD;EAAA,2BAAc,OAAKC,cAAL,CAAoBD,QAApB,EAA8BH,QAA9B,CAAd;EAAA,mBAAlB;EACD;EACF,eATD;EAUD,aAXD;EAYD,WAbD,MAaO;EACL;EACA,gBAAMK,aAAaP,UAChBzI,MADgB,CACT,UAACc,IAAD;EAAA,qBAAUA,KAAKG,KAAL,CAAW,CAAX,EAAc7B,OAAOxC,MAAP,GAAgB,CAA9B,MAAwCwC,MAAxC,MAAV;EAAA,aADS,EAEhBuC,GAFgB,CAEZ,UAAC5B,IAAD;EAAA,qBAAUkJ,eAAeC,WAAf,CAA2BnJ,IAA3B,CAAV;EAAA,aAFY,CAAnB;;EAIA,gBAAIiJ,UAAJ,EACEG,QAAQC,GAAR,CAAYJ,UAAZ,EAAwBK,IAAxB,CAA6B,YAAM;EACjC,qBAAKC,kBAAL,CAAwBb,SAAxB,EAAmC1E,OAAnC;EACD,aAFD,EADF,KAIK,KAAKuF,kBAAL,CAAwBb,SAAxB,EAAmC1E,OAAnC;EACN;EACF;;EAED,YAAI,KAAKuB,SAAL,IAAkB,KAAKW,gBAA3B,EACE,KAAKA,gBAAL,CAAsB6B,OAAtB,CAA8B,IAA9B,EAAoC;EAClCE,sBAAY,IADsB;EAElCD,qBAAW,IAFuB;EAGlCE,mBAAS;EAHyB,SAApC;EAKH;EACF;;EAED;;EAEA;;;;;;;;yCAKmB;EACjB,WAAKsB,SAAL,CAAeC,GAAf,CAAmB,WAAnB;EACD;;EAED;;;;;;uCAGiBC,UAAUC,UAAU;EACnC,UAAIA,aAAcD,YAAYA,aAAaC,QAA1B,IAAuC,CAACD,QAArD,CAAJ,EAAoE;EAClE,aAAKlK,GAAL;EACA,aAAKsC,EAAL,GAAU6H,QAAV;EACA,aAAKrH,WAAL,CAAiB,SAAjB,EAA4BqH,QAA5B;EACD;EACF;;EAED;;;;;;kCAGYD,UAAUC,UAAU;EAC9B,UAAKD,YAAYA,aAAaC,QAA1B,IAAwCA,YAAY,CAACD,QAAzD,EAAoE;EAClE,aAAKlK,GAAL;EACA;EACA,aAAKiI,aAAL;EACD;EACF;;EAED;;;;;;;2CAIqBiC,UAAUC,UAAU;EACvC,UAAID,aAAaC,QAAjB,EAA2B;EAC3B;EACA,UAAI,CAACA,QAAL,EAAe,KAAK9H,YAAL,GAAf,KACK;EACH,aAAKrC,GAAL,kCAAwC,KAAKC,GAA7C,QAAuDkK,YAAY,MAAnE;EACA;EACA,YAAMC,QAAQ,kEAAd;EACA,YAAIC,QAAQD,MAAME,IAAN,CAAWH,QAAX,CAAZ;;EAEA;EACA,YAAI,CAACE,KAAL,EAAY;;EAEZ,YAAME,aAAaF,MAAM,CAAN,CAAnB;EACA;EACA,YAAIE,eAAe,KAAKjI,EAApB,IAA0B,CAAC,KAAKG,OAApC,EAA6C,KAAKH,EAAL,GAAUiI,UAAV;EAC9C;EACF;;EAED;;;;;;;qCAIeC,eAAe;EAC5B;EAD4B;EAAA;EAAA;;EAAA;EAE5B,6BAAqBA,aAArB,8HAAoC;EAAA,cAA3BC,QAA2B;;EAClC;EACA,cAAIA,SAASnO,IAAT,KAAkB,WAAlB,IAAiCmO,SAASC,UAAT,CAAoBrN,MAAzD,EAAiE;EAC/D,gBAAMsN,eAAe,4BAAIF,SAASC,UAAb,GAAyBjK,MAAzB,CAAgC,UAACnD,CAAD;EAAA,qBAAOA,EAAE2B,QAAF,KAAe2L,YAAYC,SAAlC;EAAA,aAAhC,CAArB;EACA,iBAAK7C,iBAAL,CAAuB2C,YAAvB;EACD;EACF;EAR2B;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAS7B;EACD;;EAEA;;;;;;;;EA+BA;;;yCAGmBzD,SAAS4D,WAAW;EAAA;;EACrC,cAAQ5D,QAAQ5K,IAAhB;EACE,aAAKH,MAAL;EACE;EACA;EACA,iBAAO,mEACJ2O,SADI,EACQ3O,OAAO2O,SAAP,CADR,iDAEC,IAFD,gDAGAC,GAHA,sDAIMrL,SAJN,0BAKLoL,SALK,CAAP;;EAOF,aAAK1O,OAAL;EACE,iBAAO0O,cAAc,IAArB;;EAEF,aAAK5O,MAAL;EACE,iBAAO,mEACJ4O,SADI,EACQA,SADR,sDAEMpL,SAFN,0BAGLoL,SAHK,CAAP;;EAKF;EACE,iBAAOA,SAAP;EArBJ;EAuBD;;EAED;;;;;;8CAGwB9M,KAAKkG,MAAMnH,OAAO;EACxC;EACA,UAAMiO,iBAAiBhN,IAAI1B,IAAJ,KAAaF,OAAb,IAAwB,CAACW,KAAhD;EACA,UAAMkO,SAASlO,UAAU,IAAzB;EACA,UAAMmO,cAAc,OAAOnO,KAAP,KAAiB,WAArC;;EAEA;EACA,UAAIiO,kBAAkBC,MAAlB,IAA4BC,WAAhC,EAA6C;EAC3C,aAAK3P,eAAL,CAAqB2I,IAArB;EACD,OAFD,MAEO;EACL;EACA,YAAIlG,IAAI1B,IAAJ,KAAaF,OAAb,IAAwB,OAAOW,KAAP,KAAiB,SAA7C,EAAwD;EACtD,eAAKoO,YAAL,CAAkBjH,IAAlB,EAAwB,EAAxB;EACD,SAFD,MAEO;EACL;EACA,cAAIlG,IAAI+F,MAAR,EAAgB;EACd,iBAAKqH,uBAAL,CAA6BpN,GAA7B,EAAkCkG,IAAlC,EAAwCnH,KAAxC;EACD;;EAED;EACA,eAAKoO,YAAL,CAAkBjH,IAAlB,EAAwBnH,KAAxB;EACD;EACF;EACF;;EAED;;;;;;uCAGiBkD,KAAKwF,OAAO;EAAA;;EAC3B,WAAKzF,GAAL,CAAS,mBAAT;;EAEA,UAAI,KAAKuG,cAAT,EAAyB,KAAKA,cAAL,CAAoBI,UAApB;;EAEzB;EACA9J,aAAOqB,IAAP,CAAYuH,KAAZ,EAAmB0D,OAAnB,CAA2B,UAACkC,IAAD,EAAU;EACnC,YAAIC,UAAU7F,MAAM4F,IAAN,CAAd;;EAEA;EACA,YAAI,QAAOC,OAAP,yCAAOA,OAAP,OAAmB,QAAvB,EAAiC;EAC/B,cAAIC,aAAa,KAAjB;EACA,cAAIC,SAAS,EAAb;EACA;EACA,cAAIF,QAAQG,SAAZ,EAAuB;EACrB;EACAD,qBAAS,OAAKE,OAAL,CAAgBzL,GAAhB,UAAwBoL,IAAxB,CAAT;EACA,gBAAIG,OAAOnO,MAAP,GAAgB,CAApB,EAAuB;EACrBiO,sBAAQK,KAAR,GAAgBH,MAAhB;EACAD,2BAAa,IAAb;EACD;;EAED;EACAC,qBAAS,OAAKE,OAAL,MAAgBL,IAAhB,CAAT;EACA,gBAAIG,OAAOnO,MAAP,GAAgB,CAApB,EAAuB;EACrBiO,sBAAQK,KAAR,GAAgBH,MAAhB;EACAD,2BAAa,IAAb;EACD;EACD;EACD,WAfD,MAeO;EACLC,qBAAS,4BAAI,OAAKnL,QAAT,GAAmBI,MAAnB,CAA0B,UAACC,KAAD;EAAA,qBAAW,CAACA,MAAMC,YAAN,CAAmB,MAAnB,CAAZ;EAAA,aAA1B,CAAT;;EAEA,gBAAI6K,OAAOnO,MAAP,GAAgB,CAApB,EAAuB;EACrBiO,sBAAQK,KAAR,GAAgBH,MAAhB;EACAD,2BAAa,IAAb;EACD;EACF;;EAED;EACA,cAAIA,UAAJ,EAAgB;EACd,mBAAKJ,YAAL,UAAyBE,IAAzB,EAAiC,EAAjC;EACD,WAFD,MAEO;EACL,mBAAK9P,eAAL,UAA4B8P,IAA5B;EACD;EACF;EACF,OAvCD;;EAyCA,WAAKrL,GAAL,CAAS,kBAAT;;EAEA,UAAI,KAAKuG,cAAT,EAAyB,KAAKA,cAAL,CAAoBgC,OAApB,CAA4B,IAA5B,EAAkC,EAAEC,WAAW,IAAb,EAAlC;EAC1B;;EAED;;;;;;8CAGwB;EAAA;;EACtB,UAAMpE,aAAa,KAAKzC,SAAL,CAAe0C,aAAlC;EACA,UAAIuH,aAAa,KAAjB;;EAEA,UAAI/O,OAAOqB,IAAP,CAAYkG,UAAZ,EAAwB/G,MAAxB,GAAiC,CAArC,EAAwC,KAAK2C,GAAL;;EAJlB,iCAMbgH,QANa;EAOpB,YAAME,UAAU9C,WAAW4C,QAAX,CAAhB;;EAEA;EACA;EACA;EACA,YAAI,OAAO,OAAKA,QAAL,CAAP,KAA0B,WAA9B,EAA2C;EACzC,iBAAKhH,GAAL,iBACegH,QADf,cAC+B,OAAKtK,WAAL,CAAiB8D,IADhD;EAGD,SAJD,MAIO;EACL,cAAM+I,WAAW,OAAK5H,SAAL,CAAe0F,UAAf,CAA0BL,QAA1B,CAAjB;EACA,cAAIE,QAAQ1C,OAAZ,EAAqBoH,aAAa,IAAb;;EAErB/O,iBAAOC,cAAP,CAAsB,MAAtB,EAA4BkK,QAA5B,EAAsC;EACpC6E,iBAAK,eAAM;EACT,kBAAMf,YAAY,OAAKlK,YAAL,CAAkB2I,QAAlB,CAAlB;;EAEA,qBAAO,OAAKhC,kBAAL,CAAwBL,OAAxB,EAAiC4D,SAAjC,CAAP;EACD,aALmC;EAMpCgB,iBAAK,aAACC,SAAD,EAAe;EAClB;EACA,qBAAKC,uBAAL,CAA6B9E,OAA7B,EAAsCqC,QAAtC,EAAgDwC,SAAhD;;EAEA,qBAAOA,SAAP;EACD,aAXmC;EAYpCE,uBAAW,IAZyB;EAapCC,wBAAY,IAbwB;EAcpCvM,0BAAc;EAdsB,WAAtC;EAgBD;EApCmB;;EAMtB,WAAK,IAAIqH,QAAT,IAAqB5C,UAArB,EAAiC;EAAA,cAAxB4C,QAAwB;EA+BhC;;EAED;EACA,UAAI4E,UAAJ,EAAgB;EACd,aAAKlF,gBAAL,GAAwB,IAAIF,gBAAJ,CAAqB,KAAK3B,cAA1B,CAAxB;EACD;EACF;;EAED;;;;;;qDAG+B;EAC7B,UAAMT,aAAa,KAAKzC,SAAL,CAAe0C,aAAlC;;EAEA,WAAK,IAAI2C,QAAT,IAAqB5C,UAArB,EAAiC;EAC/B,YAAM8C,WAAU9C,WAAW4C,QAAX,CAAhB;;EAEA,YAAMuC,WAAW,KAAK5H,SAAL,CAAe0F,UAAf,CAA0BL,QAA1B,CAAjB;;EAEA,YAAIE,SAAQ1K,cAAR,CAAuB,SAAvB,CAAJ,EAAuC;EACrC,cAAIO,QAAQmK,SAAQzK,OAApB;;EAEA;EACA,cAAI,OAAOyK,SAAQzK,OAAf,KAA2B,UAA/B,EAA2C;EACzCM,oBAAQmK,SAAQzK,OAAR,CAAgB,IAAhB,CAAR;EACD;;EAED;EACA,cAAI,CAAC,KAAKkE,YAAL,CAAkB4I,QAAlB,CAAL,EAAkC;EAChC;EACA,iBAAKyC,uBAAL,CAA6B9E,QAA7B,EAAsCqC,QAAtC,EAAgDxM,KAAhD;EACD;EACF;EACF;EACF;;EAED;;;EAGA;;;;8CACwBmK,SAAShD,MAAMnH,OAAO;EAC5C,UACEJ,MAAMkE,OAAN,CAAcqG,QAAQnD,MAAtB,KACAmD,QAAQnD,MAAR,CAAe1G,MAAf,GAAwB,CADxB,IAEA,CAAC6J,QAAQnD,MAAR,CAAe1H,QAAf,CAAwBU,KAAxB,CAHH;EAIE;EACA;EALF,QAME;EACA,eAAKoD,IAAL,CACKpD,KADL,kCACuCmH,IADvC,sDAC4FgD,QAAQnD,MAAR,CAAeR,IAAf,CACxF,IADwF,CAD5F;EAKD;;EAED,aAAOxG,KAAP;EACD;;EAED;;;;;;yCA6CmBmM,WAAW4C,KAAK;EAAA;;EACjC5C,gBAAUC,OAAV,CAAkB,UAACE,QAAD,EAAc;EAC9ByC,YAAIzC,QAAJ,EAAcF,OAAd,CAAsB,UAACjF,IAAD,EAAU;EAC9B,kBAAKsD,iBAAL,CAAuBtD,IAAvB,EAA6BmF,QAA7B;EACD,SAFD;EAGD,OAJD;EAKD;;EAED;;;;;;;;;;wCAOkB7I,MAAM2L,IAAI;EAC1B,UAAMC,yCAAiB,KAAK9K,gBAAL,CAAsB6K,EAAtB,CAAjB,qBAA+C,KAAKpK,UAAL,CAAgBT,gBAAhB,CAAiC6K,EAAjC,CAA/C,EAAN;;EAD0B;EAAA;EAAA;;EAAA;EAG1B,8BAAmBC,UAAnB,mIAA+B;EAAA,cAApBC,IAAoB;;EAC7B,eAAK7C,cAAL,CAAoBhJ,IAApB,EAA0B6L,IAA1B;EACD;EALyB;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAM3B;;EAED;;;;;;qCAGe7L,MAAM3B,IAAI;EACvB,WAAKmB,GAAL,cAAoBQ,IAApB,YAA+B3B,EAA/B;EACA,UAAM9B,QAAQ,KAAK6D,YAAL,CAAkBJ,IAAlB,CAAd;EACA,UAAM8L,QAAQvP,SAAS,IAAT,GAAgB,iBAAhB,GAAoC,cAAlD;EACA8B,SAAGyN,KAAH,EAAU9L,IAAV,EAAgBzD,KAAhB;EACD;;;4CA1T4B;EAC3B,WAAK,IAAIiK,QAAT,IAAqB,KAAK3C,aAA1B,EAAyC;EACvC,YAAM6C,YAAU,KAAK7C,aAAL,CAAmB2C,QAAnB,CAAhB;;EAEA;EACA,YAAI,CAAChL,cAAckL,SAAd,CAAL,EAA6B;EAC3B,eAAK9G,KAAL,iBAAwB4G,QAAxB,cAAwC,KAAKxG,IAA7C;EACD;;EAED;EACA,YAAI,CAAC,UAAUuE,IAAV,CAAeiC,QAAf,CAAL,EAA+B;EAC7B,eAAK5G,KAAL,eACc,KAAKI,IADnB,SAC2BwG,QAD3B;EAGD;;EAED,YAAMuF,aAAa,OAAOrF,UAAQzK,OAAf,KAA2B,UAA9C;;EAEA;EACA;EACA;EACA,YAAIyK,UAAQzK,OAAR,IAAmB,CAACF,mBAAmB2K,SAAnB,CAApB,IAAmD,CAACqF,UAAxD,EACE,KAAKnM,KAAL,OACM,KAAKI,IADX,6BACwC0G,UAAQzK,OADhD,2CAC8FyK,UAAQ5K,IAAR,CAAakE,IAD3G,kBAC6HwG,QAD7H;EAGH;EACF;;;iCAuNiBA,UAAU;EAC1B,aAAO,KAAKpF,SAAL,CAAe,WAAf,EAA4BoF,QAA5B,CAAP;EACD;;EAED;;;;;;iCAGkBuC,UAAU;EAC1B,aAAO,KAAK3H,SAAL,CAAe,WAAf,EAA4B2H,QAA5B,CAAP;EACD;;EAED;;;;;;iDAGkCvC,UAAU;EAC1C,UAAME,UAAU,KAAK7C,aAAL,CAAmB2C,QAAnB,CAAhB;;EAEA,UAAIE,QAAQhD,IAAZ,EAAkB;EAChB,eAAOgD,QAAQhD,IAAf;EACD;;EAED,aAAO8C,SACJ3B,OADI,CACI,IADJ,EACU,EADV,EAEJA,OAFI,CAEI,QAFJ,EAEc,UAACmH,CAAD;EAAA,eAAOA,EAAE/K,WAAF,EAAP;EAAA,OAFd,EAGJ4D,OAHI,CAGI,QAHJ,EAGc,UAACmH,CAAD;EAAA,qBAAWA,EAAE/K,WAAF,EAAX;EAAA,OAHd,CAAP;EAID;;EAED;;;;;;iDAGkC8H,UAAU;EAC1C,WAAK,IAAIhF,IAAT,IAAiB,KAAKF,aAAtB,EAAqC;EACnC,YAAI,KAAKA,aAAL,CAAmBE,IAAnB,EAAyBL,IAAzB,KAAkCqF,QAAtC,EAAgD;EAC9C,iBAAOhF,IAAP;EACD;EACF;;EAED;EACA,UAAMyC,WAAWuC,SAASlE,OAAT,CAAiB,cAAjB,EAAiC,UAACmH,CAAD;EAAA,eAAOA,EAAE,CAAF,EAAKC,WAAL,EAAP;EAAA,OAAjC,CAAjB;EACA,aAAOzF,QAAP;EACD;;;+CAmC+BkC,WAAW;EACzC,UAAIA,SAAJ,EAAe;EACb,YAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC,OAAOA,UAAUwD,KAAV,CAAgB,GAAhB,CAAP,CAAnC,KACK,IAAI,QAAOxD,SAAP,yCAAOA,SAAP,OAAqB,QAAzB,EAAmC,OAAOA,SAAP,CAAnC,KACA;EACH,eAAK/I,IAAL,oFAA0F+I,SAA1F,yCAA0FA,SAA1F;EACD;EACF;;EAED;EACD;;;iDAEiCyD,kBAAkB;EAAA;;EAClD,UAAIC,sBAAsB,EAA1B;EACA;;EAFkD,mCAGtC5F,QAHsC,EAG5B6F,MAH4B;EAIhD,YAAIC,YAAY,QAAKrF,wBAAL,CAA8BoF,OAAOrI,OAArC,CAAhB;;EAEA;EACA,YAAIsI,SAAJ,EACEA,UAAU1K,GAAV,CAAc,UAACgH,QAAD,EAAc;EAC1B,cAAIlF,OAAO,QAAKmD,UAAL,CAAgBL,QAAhB,CAAX;EACA;EACA;EACA,cAAI,CAAC4F,oBAAoBxD,QAApB,CAAL,EAAoCwD,oBAAoBxD,QAApB,IAAgC,CAAClF,IAAD,CAAhC,CAApC,KACK0I,oBAAoBxD,QAApB,EAA8BhD,IAA9B,CAAmClC,IAAnC;EACN,SAND;EAR8C;;EAAA;EAAA;EAAA;;EAAA;EAGlD,8BAAiCrH,OAAOkB,OAAP,CAAe4O,gBAAf,CAAjC,mIAAmE;EAAA;;EAAA;;EAAA,cAAvD3F,QAAuD;EAAA,cAA7C6F,MAA6C;;EAAA,iBAAvD7F,QAAuD,EAA7C6F,MAA6C;EAYlE;EAfiD;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;EAiBlD,aAAOD,mBAAP;EACD;;EAED;;;;;;6BAGcG,KAAK;EACjBA,UAAIC,YAAJ;EACAD,UAAIE,cAAJ,CAAmBF,GAAnB;EACAA,UAAIG,mBAAJ;;EAEA,UAAI;EACF9R,eAAOsO,cAAP,CAAsByD,MAAtB,CAA6BJ,IAAI9M,GAAjC,EAAsC8M,GAAtC;EACD,OAFD,CAEE,OAAOzE,GAAP,EAAY;EACZ;EACA,YAAM8E,iBAAiBhS,OAAOsO,cAAP,CAAsBmC,GAAtB,CAA0BkB,IAAI9M,GAA9B,CAAvB;;EAEA;EACA,YAAImN,kBAAkBA,eAAezK,OAAf,KAA2BoK,IAAIpK,OAArD,EAA8D;EAC5D,eAAKxC,IAAL,CACK4M,IAAI9M,GADT,mCAC0CmN,eAAezK,OADzD,kCAC6FoK,IAAIpK,OADjG;EAGD;;EAED;EACA,YAAI2F,OAAOA,IAAI+E,OAAf,EAAwB,KAAKrN,GAAL,CAASsI,IAAI+E,OAAb;EACzB;;EAED,UAAIvN,UAAUoI,gBAAV,EAAJ,EAAkC;EAChC,YAAI;EACFC,sBAAYC,IAAZ,CAAoB,KAAKjD,OAAzB;EACD,SAFD,CAEE,OAAOmD,GAAP,EAAY;EACZ,eAAKtI,GAAL;EACD;EACF;EACF;;;qCAEqB;EACpB,WAAKsN,MAAL,GAAc;EACZlJ,oBAAY,EADA;EAEZmJ,0BAAkB,EAFN;EAGZC,6BAAqB,EAHT;EAIZZ,6BAAqB,EAJT;EAKZa,mBAAW,EALC;EAMZC,mBAAW;EANC,OAAd;EAQD;;EAED;;;;;;;gCAIiBC,WAAWC,QAAQ;EAClC,WAAKN,MAAL,CAAYK,SAAZ,IAAyBC,MAAzB;EACD;;EAED;;;;;;gCAGiBD,WAAW;EAC1B,aAAOA,YAAY,KAAKL,MAAL,CAAYK,SAAZ,CAAZ,GAAqC,KAAKL,MAAjD;EACD;;EAED;;;;;;qCAGsBP,KAAK;EACzB;EACA,UAAMJ,gCAAwBI,IAAI3I,UAA5B,EAA2CtE,UAAUsE,UAArD,CAAN;;EAEA2I,UAAIc,SAAJ,CAAc,qBAAd,EAAqCd,IAAI3I,UAAzC;EACA2I,UAAIc,SAAJ,CAAc,kBAAd,EAAkC/N,UAAUsE,UAA5C;EACA2I,UAAIc,SAAJ,CAAc,YAAd,EAA4BlB,gBAA5B;;EAEA;EACA,UAAMe,YAAY,EAAlB;EACA,UAAMD,YAAY,EAAlB;EACA,WAAK,IAAIzG,QAAT,IAAqB2F,gBAArB,EAAuC;EACrC,YAAMpD,WAAW,KAAK7E,0BAAL,CAAgCsC,QAAhC,CAAjB;EACA0G,kBAAU1G,QAAV,IAAsBuC,QAAtB;EACAkE,kBAAUlE,QAAV,IAAsBvC,QAAtB;EACD;EACD+F,UAAIc,SAAJ,CAAc,WAAd,EAA2BJ,SAA3B;EACAV,UAAIc,SAAJ,CAAc,WAAd,EAA2BH,SAA3B;;EAEA,UAAMd,sBAAsB,KAAKkB,0BAAL,CAAgCnB,gBAAhC,CAA5B;EACA,UAAI9P,OAAOqB,IAAP,CAAY0O,mBAAZ,CAAJ,EAAsCG,IAAIc,SAAJ,CAAc,qBAAd,EAAqCjB,mBAArC;EACvC;;EAED;;;;;;;;;0BAM2B;EACzB,aAAO,KAAKhL,SAAL,CAAe,YAAf,CAAP;EACD;;EAED;;;;;;;;;0BAMiC;EAC/B,aAAO,KAAKA,SAAL,CAAe,qBAAf,CAAP;EACD;;EAED;;;;;;;;0BAKwB;EACtB,aAAO;EACLmM,YAAI,KADC;EAELC,YAAI,OAFC;EAGLC,YAAI,OAHC;EAILC,YAAI,OAJC;EAKLC,YAAI,QALC;EAML,eAAO,QANF;EAAA,OAAP;EAQD;;;IAnmCqBvD;;EAsmCxB;;;EACA9K,UAAUuG,YAAV,GAAyB,EAAzB;;EAEA7K,WAAWsE,UAAUE,GAArB;;;;;;;;"}